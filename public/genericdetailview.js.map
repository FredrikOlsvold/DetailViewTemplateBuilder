{"version":3,"file":"genericdetailview.js","sources":["../../../node_modules/lit-html/lib/dom.js","../../../node_modules/lit-html/lib/template.js","../../../node_modules/lit-html/lib/modify-template.js","../../../node_modules/lit-html/lib/directive.js","../../../node_modules/lit-html/lib/part.js","../../../node_modules/lit-html/lib/template-instance.js","../../../node_modules/lit-html/lib/template-result.js","../../../node_modules/lit-html/lib/parts.js","../../../node_modules/lit-html/lib/template-factory.js","../../../node_modules/lit-html/lib/render.js","../../../node_modules/lit-html/lib/default-template-processor.js","../../../node_modules/lit-html/lit-html.js","../../../node_modules/lit-html/lib/shady-render.js","../../../node_modules/lit-element/lib/updating-element.js","../../../node_modules/lit-element/lib/decorators.js","../../../node_modules/lit-element/lib/css-tag.js","../../../node_modules/lit-element/lit-element.js","../../../widgets/shared/requestTimeoutUtil.ts","../../../widgets/shared/toQueryParams.ts","../../../widgets/genericdetailviewmanager/services/templateretriever.ts","../../../widgets/shared/@cancelclick.ts","../../../widgets/shared/guid.ts","../../../widgets/shared/MakeImmutable.ts","../../../widgets/shared/extentions/lit-element.extensions.ts","../../../node_modules/lit-html/directives/repeat.js","../../../node_modules/lit-html/directives/until.js","../../../widgets/genericdetailview/helpers/datavalidator.ts","../../../widgets/genericdetailview/discontinued/services/checkboxservice.ts","../../../widgets/shared/Period/PeriodTypes.ts","../../../widgets/shared/dateUtil.ts","../../../widgets/shared/dateformat.ts","../../../widgets/genericdetailview/discontinued/services/dateservice.ts","../../../widgets/genericdetailview/discontinued/services/iconservice.ts","../../../widgets/genericdetailview/discontinued/services/linkservice.ts","../../../widgets/genericdetailview/discontinued/services/listservice.ts","../../../widgets/genericdetailview/discontinued/services/objectservice.ts","../../../widgets/genericdetailview/helpers/dataformatter.ts","../../../widgets/genericdetailview/discontinued/services/textservice.ts","../../../widgets/genericdetailview/formatters/booleanformatter.ts","../../../widgets/genericdetailview/formatters/datetimeformatter.ts","../../../widgets/genericdetailview/formatters/numberformatter.ts","../../../widget_library/jsonquery/state.ts","../../../widget_library/jsonquery/depth-split.ts","../../../widget_library/jsonquery/tokenize.ts","../../../widget_library/jsonquery/jsonquery.ts","../../../widgets/genericdetailview/formatters/objectformatter.ts","../../../widgets/genericdetailview/formatters/stringformatter.ts","../../../widgets/genericdetailview/formatters/dataformatter.ts","../../../widgets/genericdetailview/formatters/tableformatter.ts","../../../widgets/genericdetailview/helpers/dataretriever.ts","../../../widgets/genericdetailview/writers/fieldwriter.ts","../../../widgets/genericdetailview/engine/templateengine.ts","../../../widgets/genericdetailview/views/genericdetailview.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                // Type assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     * @deprecated Override `getUpdateComplete()` instead for forward\n     *     compatibility with `lit-element` 3.0 / `@lit/reactive-element`.\n     */\n    _getUpdateComplete() {\n        return this.getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async getUpdateComplete() {\n     *       await super.getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n * @deprecated `internalProperty` will be renamed to `state` in lit-element 3.0.\n *     Please update to `state` now to be compatible with 3.0.\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport const state = internalProperty;\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const prop = name !== undefined ? name : protoOrDescriptor.key;\n            const key = typeof prop === 'symbol' ? Symbol() : `__${prop}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        // tslint:disable-next-line:no-any testing existence on older browsers\n                        (node.matches ?\n                            node.matches(selector) :\n                            legacyMatches.call(node, selector)));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport { UpdatingElement as ReactiveElement } from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.5.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow(this.constructor.shadowRootOptions);\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n/** @nocollapse */\nLitElement.shadowRootOptions = { mode: 'open' };\n//# sourceMappingURL=lit-element.js.map","export default async function timeout(promise: Promise<Response>, ms: number = 60000): Promise<Response> {\r\n    return new Promise<Response>(async (resolve, reject) => {\r\n        setTimeout(() => {\r\n            reject(new Error(\"timeout\"))\r\n        }, ms)\r\n        resolve(await promise)\r\n    })\r\n}","﻿import timeoutPromise from './requestTimeoutUtil';\r\n\r\nexport function toQueryParams(o) {\r\n\r\n    if (!o) return '';\r\n\r\n    var ret = Object.entries(o).map(([key, val]) => {\r\n        return `${encodeURIComponent(key)}=${encodeURIComponent(val instanceof Date ? formatdate(val) : val ? val.toString() : '')}`\r\n    }).join('&');\r\n    return ret;\r\n}\r\n\r\nexport async function QueryServer<T>(query: any , name: string =  null) : Promise<T> {\r\n        \r\n    var qName =  name ? name : query.constructor.name;\r\n\r\n    document.dispatchEvent(new CustomEvent('ServerQueryStarted'));\r\n\r\n    try {\r\n        const promise = fetch(`/q/${qName}`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(query, handelSerializer) // body data type must match \"Content-Type\" header\r\n        });\r\n\r\n        let res = await timeoutPromise(promise);\r\n        \r\n        let req = await res.json();\r\n\r\n        //document.dispatchEvent(new CustomEvent('ServerQueryEnded', { Data: {} }))\r\n        return <T>req;\r\n\r\n    } catch (e) {\r\n        document.dispatchEvent(new CustomEvent('ServerQueryFailed'));\r\n        console.error(e);\r\n        //document.dispatchEvent(new CustomEvent('ServerQueryFailed', { Data: {} }))\r\n        throw e;\r\n    }  finally {\r\n        document.dispatchEvent(new CustomEvent('ServerQueryEnded'));\r\n    }\r\n}\r\n\r\nexport async function QueryServer2<T>(query: any, name: string = null): Promise<T> {\r\n    //\r\n    // TODO! Use it (rename + verify & fix the code that use the QueryServer function) or remove it.\r\n    //       It fixes the problem with datetime data type in json result.\r\n    //       Parses ISO-8601 compliant date-time strings and returns Date objects.\r\n    // \r\n    var qName = name ? name : query.constructor.name;\r\n\r\n    document.dispatchEvent(new CustomEvent('ServerQueryStarted'));\r\n\r\n    try {\r\n        const promise = fetch(`/q/${qName}`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(query, handelSerializer) // body data type must match \"Content-Type\" header\r\n        });\r\n\r\n        let res = await timeoutPromise(promise);\r\n\r\n        let text = await res.text();\r\n\r\n        let dateRegExp = new RegExp(/^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$/);\r\n\r\n        return <T>JSON.parse(text, (key, value) => {\r\n            if (typeof value === 'string') {\r\n                // Parse ISO-8601 date strings\r\n                let result = dateRegExp.exec(value);\r\n                if (result) {\r\n                    return new Date(value);\r\n                }\r\n            }\r\n            return value;\r\n        });\r\n    } catch (e) {\r\n        document.dispatchEvent(new CustomEvent('ServerQueryFailed'));\r\n        console.error(e);\r\n        throw e;\r\n    } finally {\r\n        document.dispatchEvent(new CustomEvent('ServerQueryEnded'));\r\n    }\r\n}\r\n\r\nexport async function GET<T>(path: string, params: any = null): Promise<T> {\r\n\r\n\r\n    document.dispatchEvent(new CustomEvent('ServerQueryStarted'));\r\n    try {\r\n        const promise = fetch(`${path}?${toQueryParams(params)}`, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n        });\r\n\r\n        let res = await timeoutPromise(promise);\r\n\r\n        let req = await res.json();\r\n        \r\n        return <T>req;\r\n\r\n    } catch (e) {\r\n        document.dispatchEvent(new CustomEvent('ServerQueryFailed'));\r\n        console.error(e);\r\n        throw e;\r\n    } finally {\r\n        document.dispatchEvent(new CustomEvent('ServerQueryEnded'));\r\n    }\r\n\r\n}\r\n\r\nexport async function ExecuteOnServer(query: any, name: string = null): Promise<void> {\r\n\r\n    var qName = name ? name : query.constructor.name;\r\n    document.dispatchEvent(new CustomEvent('ServerQueryStarted'));\r\n\r\n    try {\r\n        const promise = fetch(`/cmd/${qName}`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(query, handelSerializer) // body data type must match \"Content-Type\" header\r\n        });\r\n\r\n        let res = await timeoutPromise(promise);\r\n\r\n        if (!res.ok) throw await res.text();\r\n\r\n        return;\r\n\r\n    } catch (e) {\r\n        document.dispatchEvent(new CustomEvent('ServerQueryFailed'));\r\n        console.error(e);\r\n        throw e;\r\n    } finally {\r\n        document.dispatchEvent(new CustomEvent('ServerQueryEnded'));\r\n    }\r\n\r\n}\r\n\r\nexport async function ExecuteOnServerWithResult<T>(command: any, name: string = null): Promise<T> {\r\n\r\n    var qName = name ? name : command.constructor.name;\r\n    document.dispatchEvent(new CustomEvent('ServerQueryStarted'));\r\n\r\n    try {\r\n        const promise = fetch(`/cmd/${qName}`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(command, handelSerializer) // body data type must match \"Content-Type\" header\r\n        });\r\n\r\n        let res = await timeoutPromise(promise);\r\n\r\n        if (!res.ok) throw await res.text();\r\n\r\n        let req = await res.json();\r\n\r\n        return <T>req;\r\n\r\n    } catch (e) {\r\n        document.dispatchEvent(new CustomEvent('ServerQueryFailed'));\r\n        console.error(e);\r\n        throw e;\r\n    } finally {\r\n        document.dispatchEvent(new CustomEvent('ServerQueryEnded'));\r\n    }\r\n}\r\n\r\nfunction handelSerializer(key, value) {\r\n    \r\n    if (key) {\r\n        return this[key] instanceof Date ? datetostring(this[key]) : value;\r\n    } \r\n    return value;\r\n       \r\n}\r\n\r\nfunction datetostring(val: Date): string {\r\n    \r\n    let pad = (num) => num.toString().padStart(2, \"0\");\r\n\r\n    let ret = `${val.getFullYear()}-${pad(val.getMonth() + 1)}-${pad(val.getDate())}T${pad(val.getHours())}:${pad(val.getMinutes())}:${pad(val.getSeconds())}`\r\n\r\n    return ret;    \r\n}\r\n\r\nfunction formatdate(val: Date): string {\r\n    let res = JSON.stringify(val).replace(/\"/ig, '');\r\n    return res;\r\n}\r\n","﻿import { QueryServer2 } from \"../../shared/toQueryParams\";\r\nimport { ITemplateRetriever } from \"../interfaces/itemplateretriever\";\r\n\r\nexport class TemplateRetriever implements ITemplateRetriever {\r\n\r\n    public templates = new Map<String, Promise<server.TemplateDataDTO>>();\r\n\r\n    public async getTemplateFromTemplateId(templateId: string): Promise<server.TemplateDataDTO> {\r\n\r\n        if (!this.templates.has(templateId)) {\r\n            this.templates.set(templateId, QueryServer2<server.TemplateDataDTO>(new GetTemplateDataQuery({\r\n                TemplateId: templateId,\r\n            })))\r\n\r\n        }\r\n        return await this.templates.get(templateId);\r\n    }\r\n\r\n    public async getTemplateId(scopeId: string, dataStreamid: string, dataItemType: string): Promise<server.TemplateIdDTO> {\r\n        return await QueryServer2<server.TemplateIdDTO>(new GetDetailViewTemplateIdQuery({\r\n            ScopeId: scopeId,\r\n            DateStreamId: dataStreamid,\r\n            DataItemType: dataItemType\r\n        }));\r\n    }\r\n}\r\nclass GetTemplateDataQuery implements server.GetTemplateDataQuery {\r\n    TemplateId: any;\r\n\r\n    constructor(init?: Partial<GetTemplateDataQuery>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\nclass GetDetailViewTemplateIdQuery implements server.GetDetailViewTemplateIdQuery {\r\n    ScopeId: any;\r\n    DateStreamId: any;\r\n    DataItemType: any;\r\n\r\n    constructor(init?: Partial<GetDetailViewTemplateIdQuery>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\n","﻿export function cancelclick() {\r\n\r\n    return function(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\r\n\r\n        let c = (e) => {\r\n            e.stopImmediatePropagation();\r\n            return false;\r\n        };\r\n\r\n        let prev: Function = descriptor.value;\r\n        descriptor.value = function() {\r\n            this.addEventListener(\"pointerdown\", c);\r\n            this.addEventListener(\"pointerup\", c);\r\n            prev.apply(this, arguments);\r\n        };\r\n\r\n\r\n    };\r\n}\r\n\r\nexport function stopevent() {\r\n\r\n    return function (target: any, propertyKey: string, descriptor?: TypedPropertyDescriptor<any>) {\r\n\r\n        let prev: Function = descriptor.value;\r\n        descriptor.value = function (e:CustomEvent) {\r\n            e.cancelBubble=true;\r\n            e.stopImmediatePropagation();\r\n            e.stopPropagation();\r\n            prev.apply(this, arguments);\r\n            return false;\r\n        };\r\n\r\n    };\r\n}\r\n","﻿export function isGuidNullOrEmpty(guid: string): boolean {\r\n    if (!guid || !guid[0]) return true;\r\n    if (guid == \"00000000-0000-0000-0000-000000000000\") return true;\r\n    return false;\r\n}\r\n\r\n\r\nexport class Guid {\r\n\r\n    private static _empty : Guid = null;\r\n\r\n    private _id: string;\r\n\r\n    public constructor();\r\n    public constructor(guid: string);\r\n    public constructor(...params: any[]) {\r\n        switch (params.length) {\r\n            case 0: this._id = this.createId(); break;\r\n            case 1: this._id = this.verifyOrDie(params[0] as string); break;\r\n            default: \r\n        }\r\n    }\r\n\r\n    public toString(): string {\r\n        return this._id;\r\n    }\r\n\r\n    private createId(): string {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    private verifyOrDie(value: string): string {\r\n        if (value.match(/^[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}$/i)) {\r\n            return value.toUpperCase();\r\n        }\r\n        throw `${value} is not a legal Guid`;\r\n    }\r\n\r\n    public static newGuid() : Guid {\r\n        return new Guid();\r\n    }\r\n\r\n    public static get empty(): Guid {\r\n        if (!Guid._empty) {\r\n            Guid._empty = new Guid('00000000-0000-0000-0000-000000000000');\r\n        }\r\n        return Guid._empty; \r\n    }\r\n}","﻿export function MakeIm<T>(o: Partial<T>): T {\r\n    return Object.freeze(o);\r\n}","﻿import { LitElement } from \"lit-element\";\r\nimport { Guid } from \"../guid\";\r\nimport { MakeIm } from \"../MakeImmutable\";\r\n\r\n\r\n\r\nexport interface PropertyChangedObserverDeclaration {\r\n    property: string;\r\n    callback: { (oldValue: any, newValue: any): void }\r\n}\r\n\r\nexport interface IPropertyChangedObserver {\r\n    invoke: { (property: string, oldValue: any, newValue: any): void }\r\n};\r\n\r\n\r\nexport interface VisibilityChangedObserver { (visible: boolean): void };\r\nexport interface RemoveVisibilityChangedObserver { (): void };\r\n\r\n\r\n/*\r\n * LitElement extensions\r\n */\r\ndeclare module 'lit-element' {\r\n    interface LitElement {\r\n        raiseEvent<T>(name: string, value: T): void;\r\n        cancelEventPropagation(e: Event): void;\r\n        getShadowRoot(): ShadowRoot;\r\n        addVisibilityChangedObserver(element: Element, visibilityChangedCallback: VisibilityChangedObserver);\r\n        addPropertyChangedObserver(...args: PropertyChangedObserverDeclaration[]): IPropertyChangedObserver;\r\n    }\r\n}\r\n\r\nif (!LitElement.prototype.raiseEvent) {\r\n    LitElement.prototype.raiseEvent = function <T>(name: string, value: T) : void {\r\n        this.dispatchEvent(new CustomEvent(name, {\r\n            detail: MakeIm(value),\r\n            bubbles: true,\r\n            cancelable: true,\r\n            composed: true\r\n        }));        \r\n    }\r\n}\r\n\r\nif (!LitElement.prototype.cancelEventPropagation) {\r\n    LitElement.prototype.cancelEventPropagation = function (e: Event): void {\r\n        e.cancelBubble = true;\r\n        e.stopImmediatePropagation();\r\n        e.stopPropagation();\r\n    }\r\n}\r\n\r\nif (!LitElement.prototype.getShadowRoot) {\r\n    LitElement.prototype.getShadowRoot = function (): ShadowRoot {\r\n        return (this.getRootNode() as any).host.shadowRoot as ShadowRoot;\r\n    }\r\n}\r\n\r\nif (!LitElement.prototype.addVisibilityChangedObserver) {\r\n    LitElement.prototype.addVisibilityChangedObserver = function (element: Element, visibilityChangedCallback: VisibilityChangedObserver): RemoveVisibilityChangedObserver {\r\n        let observer: IntersectionObserver;\r\n        observer = new IntersectionObserver(io => {\r\n            if (io?.length > 0) {\r\n                visibilityChangedCallback(io[0].isIntersecting);\r\n            }\r\n        });\r\n        observer.observe(element);\r\n        let id = `_${Guid.newGuid().toString()}`;\r\n        this[id] = observer;\r\n        return () => {\r\n            observer.disconnect();\r\n            this[id] = null;\r\n        }\r\n    }\r\n}\r\n\r\nif (!LitElement.prototype.addPropertyChangedObserver) {\r\n    /**\r\n     * To use this feature override the method attributeChangedCallback(name, oldVal, newVal) in your \r\n     * derived class and call the PropertyChangedObserver method invoke (return value from this method).\r\n     * \r\n     */\r\n    LitElement.prototype.addPropertyChangedObserver = function (...args: PropertyChangedObserverDeclaration[]): IPropertyChangedObserver {\r\n        let observers = {};\r\n\r\n        for (let arg of args) {\r\n            observers[arg.property.toLowerCase()] =  arg.callback;\r\n        }\r\n\r\n        return <IPropertyChangedObserver>{\r\n            invoke: (property: string, oldValue: string, newValue: string) => {\r\n                if (observers[property]) {\r\n                    observers[property](oldValue, newValue);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { createMarker, directive, NodePart, removeNodes, reparentNodes } from '../lit-html.js';\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(createMarker(), beforeNode);\n    container.insertBefore(createMarker(), beforeNode);\n    const newPart = new NodePart(containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof NodePart)) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update\n        // (associated with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a\n        // parallel array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n//# sourceMappingURL=repeat.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive } from '../lit-html.js';\nconst _state = new WeakMap();\n// Effectively infinity, but a SMI.\nconst _infinity = 0x7fffffff;\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n *     const content = fetch('./content.txt').then(r => r.text());\n *     html`${until(content, html`<span>Loading...</span>`)}`\n */\nexport const until = directive((...args) => (part) => {\n    let state = _state.get(part);\n    if (state === undefined) {\n        state = {\n            lastRenderedIndex: _infinity,\n            values: [],\n        };\n        _state.set(part, state);\n    }\n    const previousValues = state.values;\n    let previousLength = previousValues.length;\n    state.values = args;\n    for (let i = 0; i < args.length; i++) {\n        // If we've rendered a higher-priority value already, stop.\n        if (i > state.lastRenderedIndex) {\n            break;\n        }\n        const value = args[i];\n        // Render non-Promise values immediately\n        if (isPrimitive(value) ||\n            typeof value.then !== 'function') {\n            part.setValue(value);\n            state.lastRenderedIndex = i;\n            // Since a lower-priority value will never overwrite a higher-priority\n            // synchronous value, we can stop processing now.\n            break;\n        }\n        // If this is a Promise we've already handled, skip it.\n        if (i < previousLength && value === previousValues[i]) {\n            continue;\n        }\n        // We have a Promise that we haven't seen before, so priorities may have\n        // changed. Forget what we rendered before.\n        state.lastRenderedIndex = _infinity;\n        previousLength = 0;\n        Promise.resolve(value).then((resolvedValue) => {\n            const index = state.values.indexOf(value);\n            // If state.values doesn't contain the value, we've re-rendered without\n            // the value, so don't render it. Then, only render if the value is\n            // higher-priority than what's already been rendered.\n            if (index > -1 && index < state.lastRenderedIndex) {\n                state.lastRenderedIndex = index;\n                part.setValue(resolvedValue);\n                part.commit();\n            }\n        });\n    }\n});\n//# sourceMappingURL=until.js.map","﻿import { Field } from \"../models/templatemodel\";\r\n\r\nexport class DataValidator {\r\n\r\n\r\n    static isEmpty(value: any): boolean {\r\n        return value === null || value === \"\" || value === undefined;\r\n    }\r\n\r\n    static isEmptyDataWithLabel(data: any, label: any): boolean {\r\n        let missingValue = this.isEmpty(data);\r\n        return (missingValue && label.includes(\"!\")) ? true : false;\r\n    }\r\n\r\n    static isValidData(data: any, field: Field): boolean {\r\n        try {\r\n            return this.isEmptyDataWithLabel(data, field.Label);\r\n        } catch (error) {\r\n            console.log(`Error in field type ${field.Type}, check that label: %c${field.Label}%c and value: %c${field.Value}%c are correct.`, \"color: red\", \"color: black\", \"color: red\", error);\r\n            console.log(error.message);\r\n        }\r\n    }\r\n\r\n    static isNumber(number: any): boolean {\r\n        return /^[0-9,.]*$/.test(number)\r\n    }\r\n\r\n    static isValidFormat(format: any): boolean {\r\n        return !this.isEmpty(format);\r\n    }\r\n\r\n    static getValidFormat(format: any): string {\r\n        let tempFormat = this.isValidFormat(format) ? format : '';\r\n        return tempFormat;\r\n    }\r\n}","﻿import { html, TemplateResult } from \"lit-html\";\r\nimport { DataRetriever } from \"../../helpers/dataretriever\";\r\nimport { DataValidator } from \"../../helpers/datavalidator\";\r\nimport { Field } from \"../../models/templatemodel\";\r\n\r\n\r\nexport class CheckboxService {\r\n    private _dataHelper: DataRetriever;\r\n\r\n    public constructor(dataHelper: DataRetriever) {\r\n        this._dataHelper = dataHelper;\r\n    }\r\n\r\n    public getCheckboxWithLabel(data: any, field: Field): TemplateResult {\r\n        let label = field.Label;\r\n        let temp = this._dataHelper.getDataFromField(data, field);\r\n        let isEmpty = DataValidator.isEmpty(temp);\r\n        if (isEmpty) {\r\n            temp = \"false\";\r\n        }\r\n        temp = temp.toLowerCase();\r\n        let checkbox = (temp === \"true\" || temp === \"yes\") ? html`<input type='checkbox' checked />` : html`<input type='checkbox' />`;\r\n\r\n        let text = html`<div class=\"checkboxContainer\">\r\n                        ${checkbox}\r\n                         <span class=\"checkmark\"></span>\r\n                        <span class=\"${field.Format}\">${label}</span>\r\n                    </div>\r\n                    `;\r\n\r\n        return this._dataHelper.outputValidator(data, field, text);\r\n    }\r\n}\r\n","﻿export enum PeriodTypes {\r\n    Hour = \"Hour\",\r\n    Day = \"Day\",\r\n    Week = \"Week\",\r\n    Month = \"Month\",\r\n    Year = \"Year\"\r\n}\r\n","﻿import { PeriodTypes } from \"./Period/PeriodTypes\";\r\n\r\nclass Week {\r\n    WeekNo: number;\r\n    Mon: Date;\r\n    Tue: Date;\r\n    Wed: Date;\r\n    Thu: Date;\r\n    Fri: Date;\r\n    Sat: Date;\r\n    Sun: Date;\r\n}\r\n\r\nexport class dateUtil {\r\n    private _date: Date;\r\n    private _curWeek: Week = null;\r\n\r\n    constructor(date?: Date, config?: DateUtilConfig) {\r\n        this._date = date || new Date();\r\n    }\r\n\r\n    setDate(d) {\r\n        this._date = d;\r\n        this._curWeek = null;\r\n    }\r\n\r\n    today() {\r\n        return this._date;\r\n    }\r\n\r\n    addDays(numberOfDays) {\r\n        let newDay = this._date.getDate() + numberOfDays;\r\n        return new Date(this._date.getFullYear(), this._date.getMonth(), newDay);\r\n    }\r\n\r\n    firstPastWeekday(dayOfweek) {\r\n        var temp = new Date(this._date.getFullYear(), this._date.getMonth(), this._date.getDate());\r\n        while (temp.getDay() != dayOfweek) { temp.setDate(temp.getDate() - 1) }\r\n\r\n        return temp;\r\n    }\r\n\r\n\r\n    public get currentWeek(): Week {\r\n\r\n        if (this._curWeek) return this._curWeek;\r\n\r\n        var week = [];\r\n        var mon = new dateUtil(this.firstPastWeekday(1));\r\n\r\n        for (var x = 0; x - 7; x++) {\r\n            week[x] = mon.addDays(x);\r\n        }\r\n\r\n\r\n        let ret = new Week();\r\n        ret.WeekNo = calculateWeekNo(this._date);\r\n        ret.Mon = week[0];\r\n        ret.Tue = week[1];\r\n        ret.Wed = week[2];\r\n        ret.Thu = week[3];\r\n        ret.Fri = week[4];\r\n        ret.Sat = week[5];\r\n        ret.Sun = week[6];\r\n        return ret;\r\n    }\r\n\r\n\r\n}\r\n\r\n//1. dow = monday\r\n//1. woy = first 4 days\r\nexport function calculateWeekNo(d: Date) {\r\n    let dayMap = [6, 0, 1, 2, 3, 4, 5];\r\n    let year = d.getFullYear();\r\n    let month = d.getMonth();\r\n    let day = d.getDate();\r\n    let dow = dayMap[d.getDay()];\r\n\r\n    let mondayInWeek = Date.UTC(year, month, (day - dow));\r\n        \r\n    let jan1st = new Date(Date.UTC(year, 0, 1));\r\n    let jan1stDow = dayMap[jan1st.getDay()];\r\n\r\n    let firstMondayOfYear = jan1stDow < 4 ? Date.UTC(year - 1, 11, 32 - jan1stDow) : Date.UTC(year, 0, 7 - jan1stDow);\r\n        \r\n\r\n    let diff = mondayInWeek - firstMondayOfYear;\r\n\r\n    return Math.floor(1 + (diff / 604800000));\r\n\r\n}\r\n\r\n\r\n\r\nexport function periodNoCalculator(date: Date) {\r\n    var res;\r\n    var firstDateOfYear = Date.UTC(date.getFullYear(), 0, 1);\r\n    var thisDay = Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours())\r\n    const msInDay = 1000 * 60 * 60 * 24;\r\n    var y = date.getFullYear();\r\n\r\n    let d = Math.floor(((thisDay - firstDateOfYear) / msInDay)) +1;\r\n    // d = d || 1; //0 is edge case\r\n\r\n    let dFormat = (\"\" + d).padStart(3, \"0\");\r\n\r\n    var h = `${date.getHours()}`.padStart(2, \"0\");\r\n\r\n    //res = parseInt(\"\" + y + d + h);\r\n\r\n    res = `${y}${dFormat}${h}`;\r\n    return parseInt(res);\r\n}\r\n\r\nexport class DateUtilConfig {\r\n    firstDayOfWeek: number;\r\n    firstWeekOfYear: string;\r\n\r\n    constructor() {\r\n        this.firstDayOfWeek = 1; //monday\r\n        this.firstWeekOfYear = 'firstFourDays';\r\n    }\r\n}\r\n\r\nexport function minDate(...args: Date[]): Date | null {\r\n    if (args.length > 0) {\r\n        let minD = args[0];\r\n        for (let i = 1; i < args.length; i++) {\r\n            if (args[i] < minD) minD = args[i];\r\n        }\r\n        return minD;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function maxDate(...args: Date[]): Date | null {\r\n    if (args.length > 0) {\r\n        let maxD = args[0];\r\n        for (let i = 1; i < args.length; i++) {\r\n            if (args[i] > maxD) maxD = args[i];\r\n        }\r\n        return maxD;    }\r\n    return null;\r\n}\r\n\r\n export function milliSecondsInPeriodType(periodType: PeriodTypes): number {\r\n\r\n    switch (periodType) {\r\n        default:\r\n        case PeriodTypes.Day: return 86400000;\r\n        case PeriodTypes.Hour: return 3600000;\r\n        case PeriodTypes.Week: return 604800000;\r\n     }\r\n}\r\n\r\nexport function getMilliSecondsInTheMonthDateIsIn(date: Date): number {\r\n    return new Date(date.getFullYear(), date.getUTCMonth() + 1, 0).getDate() * 24 * 60 * 60 * 1000;\r\n}\r\n\r\nexport function dateToLocalString(date: Date) {\r\n    return `${date.getFullYear()}-${padNumber(date.getMonth() + 1)}-${padNumber(date.getDate())} ${padNumber(date.getHours())}:${padNumber(date.getMinutes())}:${padNumber(date.getSeconds())}`;\r\n}\r\n\r\nfunction padNumber(number: number): string {\r\n    return number.toString().padStart(2, \"0\");\r\n}\r\n","﻿/**\r\n * Date format patterns:\r\n * \r\n *  Pattern  Description\r\n *  -------  --------------------------------------------------------------\r\n *  'yy'     year given with two digits, e.g. 19\r\n *  'yyyy'   year given with four digits, e.g. 2019\r\n *  \r\n *  'M'      month without leading zero, e.g. 6\r\n *  'MM'     month with leading zero, e.g. 06\r\n *  'MMM'    abbreviated month name, three letters, e.g. Jun\r\n *  'MMMM'   month name, e.g. June\r\n *  \r\n *  'd'      day without leading zero, e.g. 7\r\n *  'dd'     day with leading zero, e.g. 07\r\n *  'ddd'    abbreviated name of weekday, e.g. Mon\r\n *  'dddd'   weekday name, e.g. Monday\r\n *  \r\n *  'h'      12 hour clock without leading zero, e.g. 2\r\n *  'hh'     12 hour clock with leading zero, e.g. 02\r\n *  \r\n *  'H'      24 hour clock without leading zero, e.g. 2\r\n *  'HH'     24 hour clock with leading zero, e.g. 02\r\n *  \r\n *  'm'      minute without leading zero, e.g. 9\r\n *  'mm'     minute with leading zero, e.g. 09\r\n *  \r\n *  's'      second without leding zero, e.g. 8.\r\n *  'ss'     second with leading zero, e.g. 08\r\n *  \r\n *  't'      first char in day period designator, i.e. am/pm, e.g. a or p\r\n *  'tt'     name of the day period designator, i.e. am or pm\r\n * \r\n *  'w'      week number without leading zero\r\n *  'ww'     week number with leading zero\r\n */\r\n\r\nimport { periodNoCalculator, calculateWeekNo } from \"./dateUtil\";\r\n\r\nexport class DateFormatter {\r\n\r\n    private _dateFormatMap = new Map<string, DateFormatData>();\r\n    private _locale;\r\n\r\n\r\n    constructor(locale: string = null) {\r\n        this._locale = locale ? locale : this.getCurrentLocale();\r\n    }\r\n\r\n    /**   \r\n     * Converts the date object to its equivalent string representation.\r\n     * \r\n     * @param date the date\r\n     * @param format string with date directives.\r\n     * @returns (string) the date object's string representation formatted using the format argument.\r\n     */\r\n    public dateFormat(date: Date, format: string): string {\r\n\r\n        // Check if the format is an already preprocessed date format instance.\r\n        let dateFormat = this._dateFormatMap.get(format);\r\n        if (!dateFormat) {\r\n            dateFormat = this.parseDateFormat(format);\r\n            this._dateFormatMap.set(format, dateFormat);\r\n        }\r\n\r\n        // Do the actual converting of the date specified with the options string to a date string \r\n        // result array.\r\n        let dateTimeFormatResults = Intl.DateTimeFormat(this._locale, dateFormat.options).formatToParts(date);\r\n\r\n\r\n        // Now, set the result into the date format array, before...\r\n        let processResult = (dateFormatResult: DateFormatResultData, value: string): string => {\r\n            if (dateFormatResult.postProcess) {\r\n                return dateFormatResult.postProcess(value);\r\n            }\r\n            return value;\r\n        }\r\n\r\n        let resultData = dateFormat.createResultData();\r\n        dateTimeFormatResults.forEach(df => {\r\n\r\n            let dateFormatResult = dateFormat.getDateFormatData(df.type);\r\n            if (dateFormatResult) {\r\n                resultData[dateFormatResult.index] = processResult(dateFormatResult, df.value);\r\n            }\r\n        });\r\n\r\n        //..., adding special directives, like week number, before...\r\n        dateFormat.getSpecialDirectives().forEach(dateFormatResult => resultData[dateFormatResult.index] = processResult(dateFormatResult, dateFormatResult.specialDirective(date)));\r\n\r\n        // ... concatenating the date format strings. Remove null cells, if any, from the array.\r\n        return [...resultData.filter(v => v)].join('');\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    // \r\n    //  Private Methods...\r\n    //\r\n    //-------------------------------------------------------------------------\r\n\r\n    private getCurrentLocale(): string {\r\n        if (window.navigator.languages) {\r\n            return window.navigator.languages[0];\r\n        } else {\r\n            return window.navigator.language;\r\n        }\r\n    }\r\n\r\n    private parseDateFormat(format: string): DateFormatData {\r\n        /*\r\n         * Converts the string format to a date formatted data object.\r\n         */\r\n        let length: number = format.length;\r\n        let result = new DateFormatData();\r\n        let resultIx: number = 0;\r\n        let position: number = 0;\r\n\r\n        let options: any;\r\n        let literalPosition: number = 0;\r\n        while (position < length) {\r\n\r\n            let dateOption = dateOptions[format[position]];\r\n            if (dateOption) {\r\n\r\n                // The char matches the first character in a date directive.\r\n                // Return the length of the number of repetetive chars.\r\n                let patternLength = this.parseRepeatPattern(format, format[position], position, length);\r\n                let pattern = format.substr(position, patternLength);\r\n                let optionsMatched = dateOption[pattern];\r\n                if (optionsMatched) {\r\n\r\n                    // The string matched a date format directive.\r\n                    if (literalPosition != position) {\r\n                        // Store the literals so far.\r\n                        result.addLiteral(format.substr(literalPosition, position - literalPosition));\r\n                    }\r\n\r\n                    // Store the directive. Used when formatting the date to the\r\n                    // specified format.\r\n                    let specialDirective: SpecialDirectiveFunc = optionsMatched.specialDirective;\r\n                    let postProcessResult: PostProcessResultFunc = optionsMatched.postProcess;\r\n                    if (specialDirective) {\r\n                        result.addSpecialDirective(specialDirective, postProcessResult);\r\n                    } else {\r\n                        let entries = Object.entries(optionsMatched.options);\r\n                        let [key, value] = entries[0];\r\n                        result.addOptions(key, entries, postProcessResult);\r\n                    }\r\n                    if (dateOption.localeExtention) {\r\n                        // Do we have som special locale extentions\r\n                        dateOption.localeExtention.forEach(le => result.addExtention(le));\r\n                    }\r\n                    position += patternLength;\r\n                    literalPosition = position;\r\n                    continue;\r\n                }\r\n            }\r\n            position++;\r\n        }\r\n\r\n        if (literalPosition != position) {\r\n            result.addLiteral(format.substr(literalPosition, position - literalPosition));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    \r\n    private parseRepeatPattern(format: string, patternChar: string, position: number, length: number): number {\r\n        let index = position + 1;\r\n        while ((index < length) && (format[index] == patternChar)) {\r\n            index++;\r\n        }\r\n        return (index - position);\r\n    }\r\n}\r\n\r\n//-------------------------------------------------------------------------\r\n// \r\n//  Local Variables...\r\n//\r\n//-------------------------------------------------------------------------\r\n\r\nlet dateOptions: any = {\r\n    y: {\r\n        yy: { options: { year: '2-digit' }, postProcess: verifyLeadingZero },\r\n        yyyy: { options: { year: 'numeric' } },\r\n    },\r\n    M: {\r\n        M: { options: { month: 'numeric' } },\r\n        MM: { options: { month: '2-digit' }, postProcess: verifyLeadingZero },\r\n        MMM: { options: { month: 'short' } },\r\n        MMMM: { options: { month: 'long' } }\r\n    },\r\n    d: {\r\n        d: { options: { day: 'numeric' } },\r\n        dd: { options: { day: '2-digit' }, postProcess: verifyLeadingZero },\r\n        ddd: { options: { weekday: 'short' } },\r\n        dddd: { options: { weekday: 'long' } }\r\n    },\r\n    h: {\r\n        h: { options: { hour: 'numeric', hourCycle: 'h11' } },\r\n        hh: { options: { hour: '2-digit', hourCycle: 'h11' }, postProcess: verifyLeadingZero }\r\n    },\r\n    H: {\r\n        H: { options: { hour: 'numeric', hourCycle: 'h23', }, postProcess: removeLeadingZero },\r\n        HH: { options: { hour: '2-digit', hourCycle: 'h23', }, postProcess: verifyLeadingZero }\r\n    },\r\n    m: {\r\n        m: { options: { minute: 'numeric' } },\r\n        mm: { options: { minute: '2-digit' }, postProcess: verifyLeadingZero }\r\n    },\r\n    s: {\r\n        s: { options: { second: 'numeric' } },\r\n        ss: { options: { second: '2-digit' }, postProcess: verifyLeadingZero }\r\n    },\r\n    t: {\r\n        t: { options: { dayPeriod: 'dayPeriod' }, postProcess: abbreviateTimeDesignator },\r\n        tt: { options: { dayPeriod: 'dayPeriod' } }\r\n    },\r\n    w: {\r\n        w: { options: null,  specialDirective : getWeekNumber },\r\n        ww: { options: null, specialDirective : getWeekNumber, postProcess: verifyLeadingZero}\r\n    }\r\n}\r\n\r\n\r\n//-------------------------------------------------------------------------\r\n// \r\n//  Local Classes...\r\n//\r\n//-------------------------------------------------------------------------\r\n\r\ninterface PostProcessResultFunc { (result: string): string };\r\ninterface SpecialDirectiveFunc { (date: Date) : string }\r\n\r\nclass DateFormatResultData {\r\n    public readonly index: number;\r\n    public readonly specialDirective: SpecialDirectiveFunc;\r\n    public readonly postProcess: PostProcessResultFunc;\r\n\r\n    constructor(index: number, specialDirective: SpecialDirectiveFunc, postProcess: PostProcessResultFunc) {\r\n        this.index = index;\r\n        this.specialDirective = specialDirective;\r\n        this.postProcess = postProcess;\r\n    }\r\n}\r\n\r\n/* \r\n * Date format pre-formatted.\r\n */\r\nclass DateFormatData {\r\n    private _options  = {};\r\n    private _literals : any[] = [];\r\n    private _optionsMap = new Map<string, DateFormatResultData>();\r\n    private _specialDirectives: DateFormatResultData[] = [];\r\n    private _index: number = 0;\r\n\r\n    public constructor() {\r\n    }\r\n\r\n    public get options(): {} { return this._options; }\r\n\r\n    public getDateFormatData(directive: string): DateFormatResultData {\r\n        return this._optionsMap.get(directive);\r\n    }\r\n\r\n    public getSpecialDirectives(): DateFormatResultData[] {\r\n        return this._specialDirectives;\r\n    }\r\n\r\n    public addLiteral(literal: string): void {\r\n        this._literals.push({ index: this._index++, value: literal });       \r\n    }\r\n\r\n    public addSpecialDirective(specialDirective: SpecialDirectiveFunc, postProcessResult: PostProcessResultFunc) {\r\n        this._specialDirectives.push(new DateFormatResultData(this._index++, specialDirective, postProcessResult));\r\n    }\r\n\r\n    public addOptions(directive: string, entries : any[], postProcessResult: PostProcessResultFunc) {\r\n        this._optionsMap.set(directive, new DateFormatResultData(this._index++, null, postProcessResult));\r\n\r\n        for (let [key, value] of entries) {\r\n            this._options[key] = value;\r\n        }\r\n    }\r\n\r\n    public addExtention(extention: string) {\r\n        this._optionsMap.set(extention, new DateFormatResultData(this._index++, null, null));\r\n    }\r\n\r\n\r\n    public createResultData() : string[] {\r\n        let result = new Array<string>(this._index++);\r\n        this._literals.forEach(literal => result[literal.index] = literal.value);\r\n        return result;\r\n    }\r\n}\r\n\r\n//-------------------------------------------------------------------------\r\n// \r\n//  Local Functions...\r\n//\r\n//-------------------------------------------------------------------------\r\n\r\nfunction removeLeadingZero(r: string): string {\r\n    return r.replace(/^0/, '');\r\n}\r\n\r\nfunction verifyLeadingZero(r: string): string {\r\n    return r.replace(/^(\\d)$/, '0$1');\r\n}\r\n\r\nfunction abbreviateTimeDesignator(r: string): string {\r\n    return r[0];\r\n}\r\n\r\nfunction getWeekNumber(date: Date): string {\r\n    return calculateWeekNo(date).toString();\r\n}","﻿import { html, TemplateResult } from \"lit-html\";\r\nimport { DateFormatter } from \"../../../shared/dateformat\";\r\nimport { DataRetriever } from \"../../helpers/dataretriever\";\r\nimport { Field } from \"../../models/templatemodel\";\r\n\r\nexport class DateService {\r\n    private _dataHelper: DataRetriever;\r\n    private _dateFormatter: DateFormatter = null;\r\n\r\n    public constructor(dataHelper: DataRetriever) {\r\n        this._dataHelper = dataHelper;\r\n        this._dateFormatter = new DateFormatter();\r\n    }\r\n\r\n    public getDate(data: any, field: Field): TemplateResult {\r\n        let date = data[field.Value];\r\n        if (field.Value.includes(\".\")) {\r\n            let objectToSplit = field.Value.split('.');\r\n            let object = objectToSplit[0];\r\n            let value = objectToSplit[1];\r\n            let dataObject = data[object];\r\n            date = dataObject[value];\r\n        }\r\n        if (date === undefined || date === \"\" || date === null) {\r\n            try {\r\n                let text = html`${this._dataHelper.toggleLabel(field)}\r\n                    <span class=\"${field.Format}\"></span>`;\r\n                return this._dataHelper.outputValidator(data, field, text);\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            }\r\n        }\r\n\r\n        try {\r\n            let formatedDate = this._dateFormatter.dateFormat(new Date(date), field.Format);\r\n            let text = html`${this._dataHelper.toggleLabel(field)}\r\n                    <span class=\"${field.Format}\">${formatedDate}</span>`;\r\n            return this._dataHelper.outputValidator(data, field, text);\r\n        } catch (error) {\r\n            console.log(`Error in field ${field.Type}:`, error.message);\r\n            if (error instanceof RangeError) {\r\n                console.log(\"Possible solutions: Value does not exist in dataset, or typos in template properties\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public getDateNoLabel(data: any, field: Field): TemplateResult {\r\n        let date = this._dateFormatter.dateFormat(new Date(data[field.Value]), field.Format);\r\n        let text = html`<span class=\"${field.Format}\">${date}</span>`;\r\n        return html`<span id=\"${field.Id}\" class=\"FieldType_${field.Type}\">${text}</span>`;\r\n    }\r\n}","﻿import { html, TemplateResult } from \"lit-html\";\r\nimport { DataRetriever } from \"../../helpers/dataretriever\";\r\nimport { Field } from \"../../models/templatemodel\";\r\n\r\nexport class IconService {\r\n    private _dataHelper: DataRetriever;\r\n\r\n    public constructor(dataHelper: DataRetriever) {\r\n        this._dataHelper = dataHelper;\r\n    }\r\n\r\n    public getIconWithLabel(data: any, field: Field): TemplateResult {\r\n        let label = field.Label;\r\n        let icon = field.Value;\r\n\r\n        let text = html`<img src=${icon} alt=\"${label}\">\r\n                    <span class=\"${field.Format}\">${label}</span>`;\r\n\r\n        return this._dataHelper.outputValidator(data, field, text);\r\n    }\r\n\r\n    public getLineSeperator(data: any, field: Field): TemplateResult {\r\n        return html`<span id=\"${field.Id}\" class=\"FieldType_${field.Type}\"><div class=\"border\"></div></span>`;\r\n    }\r\n\r\n    public getEmptyLine(data: any, field: Field): TemplateResult {\r\n        return html`<span id=\"${field.Id}\" class=\"FieldType_${field.Type}\">Placeholder</span>`;\r\n    }\r\n}","﻿import { html, TemplateResult } from \"lit-html\";\r\nimport { Field } from \"../../models/templatemodel\";\r\n\r\nexport class LinkService {\r\n\r\n    static getLinktoHTML(data: any, field: Field): TemplateResult {\r\n        return html`<span class=\"label\">${field.Label} </span>\r\n                    <a class=\"${field.Format}\" href=\"url\" target=\"_blank\">${data[field.Value]}</a>`;\r\n    }\r\n}","﻿import { Section } from \"../../models/templatemodel\";\r\n\r\nexport class ListService {\r\n\r\n\r\n    static getSortedList(list: any, section: Section): any {\r\n\r\n        let sortorder = section.Options.SortOrder;\r\n        if (section.Options.SortOrder == undefined) {\r\n            return list;\r\n        }\r\n        let sortValue = section.Fields[0].Value;\r\n\r\n        switch (sortorder) {\r\n            case \"Asc\": {\r\n                return this.sortList(list, sortValue, 1);\r\n            }\r\n            case \"Desc\": {\r\n                return this.sortList(list, sortValue, -1);\r\n            }\r\n            default: {\r\n                return list;\r\n            }\r\n        }\r\n    }\r\n\r\n    static sortList(list: any, sortValue: any, number: number): any {\r\n        return list.sort((a, b) => number * (a[sortValue].localeCompare(b[sortValue])));\r\n    }\r\n}","﻿import { html, TemplateResult } from \"lit-html\";\r\nimport { Field } from \"../../models/templatemodel\";\r\n\r\nexport class ObjectService {\r\n\r\n    static getObjectValuesWithDevider(data: any, field: Field): TemplateResult {\r\n\r\n        let objectToSplit = field.Value.split(' ');\r\n        let object = objectToSplit[0];\r\n        let devider = objectToSplit[1];\r\n        let dataObject = data[object];\r\n        let code = dataObject[\"Code\"];\r\n        let name = dataObject[\"Name\"];\r\n\r\n        return html`<span class=\"label\">${field.Label}</span> \r\n                    <span class=\"${field.Format}\">${code} ${devider} ${name}</span>`;\r\n    }\r\n}","﻿import { html, TemplateResult } from \"lit-html\";\r\nimport { Field } from \"../models/templatemodel\";\r\n\r\nexport class DataFormatter {\r\n\r\n    static getTextSpanWithFormatting(data: any, field: Field): TemplateResult {\r\n        return html` <span class=\"text ${field.Format}\" > ${data} </span>`;\r\n    }\r\n\r\n    static encapsulateFieldTypeOutputInSpan(data: any, field: Field): TemplateResult {\r\n        return html`<span id=\"${field.Id}\" class=\"FieldType_${field.Type}\">${data}</span>`;\r\n    }\r\n\r\n    static encapsulateTextInSpanWithClass(data: any, className: any): TemplateResult {\r\n        return html`<span class=\"${className}\">${data}</span>`;\r\n    }\r\n}","﻿import { html, TemplateResult } from \"lit-html\";\r\nimport { DataFormatter } from \"../../helpers/dataformatter\";\r\nimport { DataRetriever } from \"../../helpers/dataretriever\";\r\nimport { DataValidator } from \"../../helpers/datavalidator\";\r\nimport { Field } from \"../../models/templatemodel\";\r\n\r\nexport class TextService {\r\n    private _dataHelper: DataRetriever;\r\n\r\n    public constructor(dataHelper: DataRetriever) {\r\n        this._dataHelper = dataHelper;\r\n    }\r\n\r\n    public getTextOneLine(data: any, field: Field): TemplateResult {\r\n        let tempData = this._dataHelper.getDataFromField(data, field);\r\n        let dataSpan = DataFormatter.encapsulateTextInSpanWithClass(tempData, \"text \" + field.Format);\r\n        let text = html`${this._dataHelper.toggleLabel(field)} ${dataSpan}`;\r\n        return this._dataHelper.outputValidator(data, field, text);\r\n    }\r\n\r\n    public getTextTwoLines(data: any, field: Field): TemplateResult {\r\n        let tempData = this._dataHelper.getDataFromField(data, field);\r\n        let labelSpan = this._dataHelper.toggleLabel(field);\r\n\r\n        if (DataValidator.isEmpty(tempData)) {\r\n            try {\r\n                return (field.Label.includes(\"!\")) ? html`` : html`${labelSpan}`;\r\n            } catch (error) {\r\n                console.log(\"Field.Label needs a value.\");\r\n                return html``;\r\n            }\r\n\r\n        };\r\n        let isMultiline = tempData.length > 60;\r\n        let textClass = isMultiline ? \"multiline\" : \"\";\r\n        let formatting = DataValidator.getValidFormat(field.Format);\r\n        let text;\r\n        let isNumber = DataValidator.isNumber(formatting);\r\n        let isEmpty = DataValidator.isEmpty(formatting);\r\n\r\n        let dataSpan;\r\n        if (isMultiline && (isNumber || isEmpty)) {\r\n            let styling = isNumber && !isEmpty ? formatting : 5;\r\n\r\n            dataSpan = DataFormatter.encapsulateTextInSpanWithClass(tempData, \"text\")\r\n            text = html`${labelSpan} <div class=\"textContainer ${textClass}\" style = \"max-height:${styling}em\" id = \"${textClass}\" > ${dataSpan}</div> `;\r\n        }\r\n        else {\r\n            dataSpan = DataFormatter.encapsulateTextInSpanWithClass(tempData, \"text \" + formatting);\r\n            text = html`${labelSpan}${dataSpan}`;\r\n        }\r\n\r\n        return this._dataHelper.outputValidator(data, field, text);\r\n    }\r\n\r\n    public getFieldValueToString(data: any, field: Field): string {\r\n        return field.Value;\r\n    }\r\n\r\n    public getDataValueToString(data: any, field: Field): string {\r\n        return data[field.Value];\r\n    }\r\n\r\n    public getTextNoLabel(data: any, field: Field): TemplateResult {\r\n        try {\r\n            let tempData = this._dataHelper.getDataFromField(data, field)\r\n            let text = DataFormatter.getTextSpanWithFormatting(tempData, field);\r\n            return DataFormatter.encapsulateFieldTypeOutputInSpan(text, field);\r\n        } catch (error) {\r\n            console.log(\"Error in text with no label properties\");\r\n        }\r\n    }\r\n\r\n    public getArrayValues(data: any, field: Field): TemplateResult {\r\n        let array = data[field.Value];\r\n        let labelWithFormatting = this._dataHelper.getLabelWithLabelFormatting(field);\r\n        if (array.length > 0) {\r\n            let text = html` \r\n                 ${labelWithFormatting} <span class=\"arrayContainer\">${array.map(i => html` <span>${i}</span> `)}</span>`;\r\n            return DataFormatter.encapsulateFieldTypeOutputInSpan(text, field);\r\n        }\r\n        let text = html`${labelWithFormatting}`;\r\n        return DataFormatter.encapsulateFieldTypeOutputInSpan(text, field);\r\n    }\r\n\r\n    public getValueWithDenomination(data: any, field: Field): TemplateResult {\r\n\r\n        let tempData = this._dataHelper.getDataFromField(data, field);\r\n        let dataSpan = DataFormatter.encapsulateTextInSpanWithClass(tempData, field.Format);\r\n        let labelSpan = this._dataHelper.toggleLabel(field);\r\n        let text = html`${labelSpan} ${dataSpan}`;\r\n        return this._dataHelper.outputValidator(data, field, text);\r\n    }\r\n\r\n    public staticText(data: any, field: Field): TemplateResult {\r\n        let text = html`${this._dataHelper.toggleLabel(field)}${this._dataHelper.toggleValue(field)}`;\r\n        return DataFormatter.encapsulateFieldTypeOutputInSpan(text, field);\r\n    }\r\n\r\n    public formattedNumbers(data: any, field: Field): TemplateResult {\r\n        let formatArray = field.Format.split(\".\");\r\n        let textNumber = parseFloat(this._dataHelper.getDataFromField(data, field));\r\n        let roundedNumber = Math.pow(10, parseFloat(formatArray[0]));\r\n        let formattedText = Math.round(textNumber * roundedNumber) / roundedNumber;\r\n        let text = html`${this._dataHelper.toggleLabel(field)}\r\n                <span class=\"text\">${formattedText} ${formatArray[1]}</span>`;\r\n\r\n        return this._dataHelper.outputValidator(data, field, text);\r\n    }\r\n\r\n    public getSplitStringOnFirstOccurenceSelectSpecificPart(data: any, field: Field, item: any): TemplateResult {\r\n        try {\r\n            let separator = field.Format;\r\n            let tempData = (DataValidator.isEmpty(this._dataHelper.getDataFromField(data, field))) ? \"\" : this._dataHelper.getDataFromField(data, field);\r\n            let text = tempData.split(separator)[item];\r\n            let output = html`${this._dataHelper.toggleLabel(field)} ${DataFormatter.encapsulateTextInSpanWithClass(text, \"text\")}`;\r\n            return (DataValidator.isEmpty(this._dataHelper.getDataFromField(data, field)) && field.Label.includes(\"!\")) ? html`` : DataFormatter.encapsulateFieldTypeOutputInSpan(output, field);\r\n        } catch (error) {\r\n            return html``;\r\n        }\r\n\r\n    }\r\n\r\n    public customBooleanValues(data: any, field: Field): TemplateResult {\r\n        let booleanValues = field.Format.split(\".\");\r\n        let decider = this._dataHelper.getDataFromField(data, field).toLowerCase() === \"true\" || this._dataHelper.getDataFromField(data, field).toLowerCase() === \"yes\"\r\n        let text = html`${this._dataHelper.toggleLabel(field)}\r\n                <span class=\"text\">${decider ? html`${booleanValues[0]}` : html`${booleanValues[1]}`}</span>`;\r\n\r\n        return this._dataHelper.outputValidator(data, field, text);\r\n    }\r\n\r\n    public getConcattedValues(data: any, field: Field): TemplateResult {\r\n        let text = this._dataHelper.getConcattedValuesWithSeparator(data, field)\r\n        let input = html`${this._dataHelper.toggleLabel(field)}${DataFormatter.encapsulateTextInSpanWithClass(text, \"text\")}`;\r\n        return DataFormatter.encapsulateFieldTypeOutputInSpan(input, field);\r\n    }\r\n\r\n    public getStringReplaceWithData(data: any, field: Field): TemplateResult {\r\n        try {\r\n            let array = field.Value.split(\"|\");\r\n            let tempData;\r\n            let stringToBeUpdated = array[0];\r\n            for (let i = 1; i < array.length; i++) {\r\n                let tempField = array[i];\r\n                tempData = this._dataHelper.getStringFromObject(data, tempField)\r\n                stringToBeUpdated = stringToBeUpdated.replace(\"$\", tempData);\r\n            }\r\n            let text = html`${this._dataHelper.toggleLabel(field)}${DataFormatter.encapsulateTextInSpanWithClass(stringToBeUpdated, \"text\")}`;\r\n            return DataFormatter.encapsulateFieldTypeOutputInSpan(text, field);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    public getValueInComplexObject(data: any, field: Field): TemplateResult {\r\n        let objectToSplit = field.Value.split(\".\");\r\n\r\n        let temp;\r\n        let result;\r\n        let element;\r\n        for (let i = 0; i < objectToSplit.length; i++) {\r\n            temp = objectToSplit[i];\r\n            if (temp.includes(\"[\")) {\r\n                let [object, rest] = this._dataHelper.getSplitValues(temp, \"[\")\r\n\r\n                if (rest.includes(\"|\")) {\r\n                    let [key, value] = this._dataHelper.getSplitValues(rest, \"|\")\r\n                    let val = value.split(\"]\")[0];\r\n                    let objectData = data[object];\r\n                    element = this._dataHelper.getElementFromKey(objectData, key, val);\r\n                    result = element;\r\n                    continue;\r\n                } else {\r\n                    let elm = element[object];\r\n                    let tempVal = rest.split(\"]\")[0];\r\n                    result = elm[tempVal];\r\n                    continue;\r\n                }\r\n            } else {\r\n                result = this._dataHelper.getReturnType(result[temp], field);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        result = html`${this._dataHelper.toggleLabel(field)} ${DataFormatter.encapsulateTextInSpanWithClass(result, \"textcontent \" + field.Format)}`;\r\n        return DataFormatter.encapsulateFieldTypeOutputInSpan(result, field);\r\n    }\r\n}","﻿export class BooleanFormatter {\r\n\r\n    static booleanfunctions = {\r\n        customBooleanValue: (value, trueValue, falseValue) => BooleanFormatter.setCustomBooleanValue(value, trueValue, falseValue),\r\n        join: (array, separator) => BooleanFormatter.join(array, separator),\r\n\r\n    }\r\n\r\n    static setCustomBooleanValue(value: any, trueValue: string, falseValue: string): string {\r\n\r\n        if (value instanceof Array) {\r\n            value.map(e => e == 'true' ? trueValue : falseValue);\r\n        }\r\n        return value === 'true' ? trueValue : falseValue\r\n    }\r\n\r\n    static join(array: any, separator: string): string {\r\n        return Array.prototype.join.apply(array, separator);\r\n    }\r\n\r\n}","﻿import { DateFormatter } from \"../../shared/dateformat\";\r\n\r\nexport class DateTimeFormatter {\r\n\r\n    static datefunctions = {\r\n        formatDate: (value, format) => DateTimeFormatter.formatDate(value, format),\r\n        join: (array, separator) => DateTimeFormatter.join(array, separator)\r\n    }\r\n\r\n    static formatDate(value: any, format: string): any {\r\n        let dateFormatter = new DateFormatter();\r\n        if (value instanceof Array) {\r\n            value.map(e => dateFormatter.dateFormat(new Date(e), format));\r\n        }\r\n        return dateFormatter.dateFormat(new Date(value), format);\r\n    }\r\n\r\n    static join(array: any, separator: string): string {\r\n        return Array.prototype.join.apply(array, separator);\r\n    }\r\n}\r\n\r\n","﻿export class NumberFormatter {\r\n\r\n\r\n    static numberfunctions = {\r\n        setDenomination: (value, denomination) => NumberFormatter.setDenomination(value, denomination),\r\n        setDecimales: (value, decimales) => NumberFormatter.setDecimales(value, decimales),\r\n        join: (array, separator) => NumberFormatter.join(array, separator)\r\n\r\n    }\r\n\r\n    static setDecimales(value: any, decimales: string): string {\r\n        if (value instanceof Array) {\r\n            value.map(e => NumberFormatter.roundNumberAndSetDecimales(e, decimales));\r\n        }\r\n        return NumberFormatter.roundNumberAndSetDecimales(value, decimales);\r\n    }\r\n\r\n    static roundNumberAndSetDecimales(value: any, decimales: string): string {\r\n        let textNumber = parseFloat(value);\r\n        let roundedNumber = Math.pow(10, parseFloat(decimales));\r\n        let number = Math.round(textNumber * roundedNumber) / roundedNumber;\r\n        return number.toString();\r\n    }\r\n\r\n    static setDenomination(value: any, denomination: string): string {\r\n        let string = value + ' ';\r\n        return string.concat(denomination);\r\n    }\r\n\r\n    static join(array: any, separator: string): string {\r\n        return Array.prototype.join.apply(array, separator);\r\n    }\r\n\r\n}\r\n\r\n","﻿export function State(options, params, handleQuery) {\r\n\r\n    options = options || {}\r\n\r\n    //this.options = options\r\n    this.handleQuery = handleQuery\r\n    this.options = options\r\n    this.locals = this.options.locals || {}\r\n    this.globals = this.options.globals || {}\r\n    this.rootContext = firstNonNull(options.data, options.rootContext, options.context, options.source)\r\n    this.parent = options.parent\r\n    this.override = options.override\r\n    this.filters = options.filters || {}\r\n    this.params = params || options.params || []\r\n    this.context = firstNonNull(options.currentItem, options.context, options.source)\r\n    this.currentItem = firstNonNull(this.context, options.rootContext, options.data)\r\n    this.currentKey = null\r\n    this.currentReferences = []\r\n    this.currentParents = []\r\n}\r\n\r\nState.prototype = {\r\n\r\n    // current manipulation\r\n    setCurrent: function (key, value) {\r\n        if (this.currentItem || this.currentKey || this.currentParents.length > 0) {\r\n            this.currentParents.push({ key: this.currentKey, value: this.currentItem })\r\n        }\r\n        this.currentItem = value\r\n        this.currentKey = key\r\n    },\r\n\r\n    resetCurrent: function () {\r\n        this.currentItem = null\r\n        this.currentKey = null\r\n        this.currentParents = []\r\n    },\r\n\r\n    force: function (def) {\r\n        var parent = this.currentParents[this.currentParents.length - 1]\r\n        if (!this.currentItem && parent && (this.currentKey != null)) {\r\n            this.currentItem = def || {}\r\n            parent.value[this.currentKey] = this.currentItem\r\n        }\r\n        return !!this.currentItem\r\n    },\r\n\r\n    getLocal: function (localName) {\r\n        if (~localName.indexOf('/')) {\r\n            var result = null\r\n            var parts = localName.split('/')\r\n\r\n            for (var i = 0; i < parts.length; i++) {\r\n                var part = parts[i]\r\n                if (i == 0) {\r\n                    result = this.locals[part]\r\n                } else if (result && result[part]) {\r\n                    result = result[part]\r\n                }\r\n            }\r\n\r\n            return result\r\n        } else {\r\n            return this.locals[localName]\r\n        }\r\n    },\r\n\r\n    getGlobal: function (globalName) {\r\n        if (~globalName.indexOf('/')) {\r\n            var result = null\r\n            var parts = globalName.split('/')\r\n\r\n            for (var i = 0; i < parts.length; i++) {\r\n                var part = parts[i]\r\n                if (i == 0) {\r\n                    result = this.globals[part]\r\n                } else if (result && result[part]) {\r\n                    result = result[part]\r\n                }\r\n            }\r\n\r\n            return result\r\n        } else {\r\n            return this.globals[globalName]\r\n        }\r\n    },\r\n\r\n    getFilter: function (filterName) {\r\n        if (~filterName.indexOf('/')) {\r\n            var result = null\r\n            var filterParts = filterName.split('/')\r\n\r\n            for (var i = 0; i < filterParts.length; i++) {\r\n                var part = filterParts[i]\r\n                if (i == 0) {\r\n                    result = this.filters[part]\r\n                } else if (result && result[part]) {\r\n                    result = result[part]\r\n                }\r\n            }\r\n\r\n            return result\r\n        } else {\r\n            return this.filters[filterName]\r\n        }\r\n    },\r\n\r\n    addReferences: function (references) {\r\n        if (references) {\r\n            references.forEach(this.addReference, this)\r\n        }\r\n    },\r\n\r\n    addReference: function (ref) {\r\n        if (ref instanceof Object && !~this.currentReferences.indexOf(ref)) {\r\n            this.currentReferences.push(ref)\r\n        }\r\n    },\r\n\r\n    // helper functions\r\n    getValues: function (values, callback) {\r\n        return values.map(this.getValue, this)\r\n    },\r\n\r\n    getValue: function (value) {\r\n        return this.getValueFrom(value, null)\r\n    },\r\n\r\n    getValueFrom: function (value, item) {\r\n        if (value._param != null) {\r\n            return this.params[value._param]\r\n        } else if (value._sub) {\r\n\r\n            let options = <any>copy(this.options)\r\n            options.force = null\r\n            options.currentItem = item\r\n\r\n            var result = this.handleQuery(value._sub, options, this.params)\r\n            this.addReferences(result.references)\r\n            return result.value\r\n\r\n        } else {\r\n            return value\r\n        }\r\n    },\r\n\r\n    deepQuery: function (source, tokens, options, callback) {\r\n        var keys = Object.keys(source)\r\n\r\n        for (var key in source) {\r\n            if (key in source) {\r\n\r\n                let options = <any>copy(this.options)\r\n                options.currentItem = source[key]\r\n\r\n                var result = this.handleQuery(tokens, options, this.params)\r\n\r\n                if (result.value) {\r\n                    return result\r\n                }\r\n            }\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nfunction firstNonNull(...args) {\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        if (arguments[i] != null) {\r\n            return arguments[i]\r\n        }\r\n    }\r\n}\r\n\r\nfunction copy(obj) {\r\n    var result = {}\r\n    if (obj) {\r\n        for (var key in obj) {\r\n            if (key in obj) {\r\n                result[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    return result\r\n}","﻿\r\nexport function depthSplit(text, delimiter, opts?) {\r\n    var max = opts && opts.max || Infinity\r\n    var includeDelimiters = opts && opts.includeDelimiters || false\r\n\r\n    var depth = 0\r\n    var start = 0\r\n    var result = []\r\n    var zones = []\r\n\r\n    text.replace(/([\\[\\(\\{])|([\\]\\)\\}])/g, function (current, open, close, offset) {\r\n        if (open) {\r\n            if (depth === 0) {\r\n                zones.push([start, offset])\r\n            }\r\n            depth += 1\r\n        } else if (close) {\r\n            depth -= 1\r\n            if (depth === 0) {\r\n                start = offset + current.length\r\n            }\r\n        }\r\n    })\r\n\r\n    if (depth === 0 && start < text.length) {\r\n        zones.push([start, text.length])\r\n    }\r\n\r\n    start = 0\r\n\r\n    for (var i = 0; i < zones.length && max > 0; i++) {\r\n        for (\r\n            var pos = zones[i][0], match = delimiter.exec(text.slice(pos, zones[i][1]));\r\n            match && max > 1;\r\n            pos += match.index + match[0].length, start = pos, match = delimiter.exec(text.slice(pos, zones[i][1]))\r\n        ) {\r\n            result.push(text.slice(start, match.index + pos))\r\n            if (includeDelimiters) {\r\n                result.push(match[0])\r\n            }\r\n            max -= 1\r\n        }\r\n    }\r\n\r\n    if (start < text.length) {\r\n        result.push(text.slice(start))\r\n    }\r\n\r\n    return result\r\n}","﻿// todo: syntax checking\r\n// todo: test handle args\r\n\r\nimport { depthSplit } from \"./depth-split\"\r\n\r\nexport function tokenize(query, shouldAssignParamIds) {\r\n    if (!query) return []\r\n\r\n    var result = []\r\n        , prevChar, char\r\n        , nextChar = query.charAt(0)\r\n        , bStart = 0\r\n        , bEnd = 0\r\n        , partOffset = 0\r\n        , pos = 0\r\n        , depth = 0\r\n        , mode = 'get'\r\n        , deepQuery = null\r\n\r\n    // if query contains params then number them\r\n    if (shouldAssignParamIds) {\r\n        query = assignParamIds(query)\r\n    }\r\n\r\n    var tokens = {\r\n        '.': { mode: 'get' },\r\n        ':': { mode: 'filter' },\r\n        '|': { handle: 'or' },\r\n        '[': { open: 'select' },\r\n        ']': { close: 'select' },\r\n        '{': { open: 'meta' },\r\n        '}': { close: 'meta' },\r\n        '(': { open: 'args' },\r\n        ')': { close: 'args' }\r\n    }\r\n\r\n    function push(item) {\r\n        if (deepQuery) {\r\n            deepQuery.push(item)\r\n        } else {\r\n            result.push(item)\r\n        }\r\n    }\r\n\r\n    var handlers = {\r\n        get: function (buffer) {\r\n            var trimmed = typeof buffer === 'string' ? buffer.trim() : null\r\n            if (trimmed) {\r\n                push({ get: trimmed })\r\n            }\r\n        },\r\n        select: function (buffer) {\r\n            if (buffer) {\r\n                push(tokenizeSelect(buffer))\r\n            } else {\r\n                // deep query override\r\n                var x = { deep: [] }\r\n                result.push(x)\r\n                deepQuery = x.deep\r\n            }\r\n        },\r\n        filter: function (buffer) {\r\n            if (buffer) {\r\n                push({ filter: buffer.trim() })\r\n            }\r\n        },\r\n        or: function () {\r\n            deepQuery = null\r\n            result.push({ or: true })\r\n            partOffset = i + 1\r\n        },\r\n        args: function (buffer) {\r\n            var args = tokenizeArgs(buffer)\r\n            result[result.length - 1].args = args\r\n        }\r\n    }\r\n\r\n    function handleBuffer() {\r\n        var buffer = query.slice(bStart, bEnd)\r\n        if (handlers[mode]) {\r\n            handlers[mode](buffer)\r\n        }\r\n        mode = 'get'\r\n        bStart = bEnd + 1\r\n    }\r\n\r\n    for (var i = 0; i < query.length; i++) {\r\n\r\n        // update char values\r\n        prevChar = char; char = nextChar; nextChar = query.charAt(i + 1);\r\n        pos = i - partOffset\r\n\r\n        // root query check\r\n        if (pos === 0 && (char !== ':' && char !== '.')) {\r\n            result.push({ root: true })\r\n        }\r\n\r\n        // parent query check\r\n        if (pos === 0 && (char === '.' && nextChar === '.')) {\r\n            result.push({ parent: true })\r\n        }\r\n\r\n        var token = tokens[char]\r\n        if (token) {\r\n\r\n            // set mode\r\n            if (depth === 0 && (token.mode || token.open)) {\r\n                handleBuffer()\r\n                mode = token.mode || token.open\r\n            }\r\n\r\n            if (depth === 0 && token.handle) {\r\n                handleBuffer()\r\n                handlers[token.handle]()\r\n            }\r\n\r\n            if (token.open) {\r\n                depth += 1\r\n            } else if (token.close) {\r\n                depth -= 1\r\n            }\r\n\r\n            // reset mode to get\r\n            if (depth === 0 && token.close) {\r\n                handleBuffer()\r\n            }\r\n\r\n        }\r\n\r\n        bEnd = i + 1\r\n\r\n    }\r\n\r\n    handleBuffer()\r\n    return result\r\n}\r\n\r\nfunction tokenizeArgs(argsQuery) {\r\n    if (argsQuery === ',') return [',']\r\n    return depthSplit(argsQuery, /,/).map(function (s) {\r\n        return handleSelectPart(s.trim())\r\n    })\r\n}\r\n\r\nfunction tokenizeSelect(selectQuery) {\r\n    if (selectQuery === '*') {\r\n        return {\r\n            values: true\r\n        }\r\n    } else if (selectQuery === '**') {\r\n        return {\r\n            values: true,\r\n            deep: true\r\n        }\r\n    }\r\n\r\n    var multiple = false\r\n    if (selectQuery.charAt(0) === '*') {\r\n        multiple = true\r\n        selectQuery = selectQuery.slice(1)\r\n    }\r\n\r\n    var booleanParts = depthSplit(selectQuery, /&|\\|/, { includeDelimiters: true })\r\n    if (booleanParts.length > 1) {\r\n        var result = [\r\n            getSelectPart(booleanParts[0].trim())\r\n        ]\r\n        for (var i = 1; i < booleanParts.length; i += 2) {\r\n            var part = getSelectPart(booleanParts[i + 1].trim())\r\n            if (part) {\r\n                part.booleanOp = booleanParts[i]\r\n                result.push(part)\r\n            }\r\n        }\r\n        return {\r\n            multiple: multiple,\r\n            boolean: true,\r\n            select: result\r\n        }\r\n    } else {\r\n        let result = getSelectPart(selectQuery.trim())\r\n        if (!result) {\r\n            return {\r\n                get: handleSelectPart(selectQuery.trim())\r\n            }\r\n        } else {\r\n            if (multiple) {\r\n                result.multiple = true\r\n            }\r\n            return result\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSelectPart(selectQuery: any): any {\r\n    var parts = depthSplit(selectQuery, /(!)?(=|~|\\:|<=|>=|<|>)/, { max: 2, includeDelimiters: true })\r\n    if (parts.length === 3) {\r\n        var negate = parts[1].charAt(0) === '!'\r\n        var key = handleSelectPart(parts[0].trim())\r\n        let result = <any>{\r\n            negate: negate,\r\n            op: negate ? parts[1].slice(1) : parts[1]\r\n        };\r\n        if (result.op === ':') {\r\n            result.select = [key, { _sub: module.exports(':' + parts[2].trim()) }]\r\n        } else if (result.op === '~') {\r\n            var value = handleSelectPart(parts[2].trim())\r\n            if (typeof value === 'string') {\r\n                var reDef = parts[2].trim().match(/^\\/(.*)\\/([a-z]?)$/)\r\n                if (reDef) {\r\n                    result.select = [key, new RegExp(reDef[1], reDef[2])]\r\n                } else {\r\n                    result.select = [key, value]\r\n                }\r\n            } else {\r\n                result.select = [key, value]\r\n            }\r\n        } else {\r\n            result.select = [key, handleSelectPart(parts[2].trim())]\r\n        }\r\n        return result\r\n    }\r\n}\r\n\r\nfunction isInnerQuery(text) {\r\n    return text.charAt(0) === '{' && text.charAt(text.length - 1) === '}'\r\n}\r\n\r\nfunction handleSelectPart(part) {\r\n    if (isInnerQuery(part)) {\r\n        var innerQuery = part.slice(1, -1)\r\n        return { _sub: module.exports(innerQuery) }\r\n    } else {\r\n        return paramToken(part)\r\n    }\r\n}\r\n\r\nfunction paramToken(text) {\r\n    if (text.charAt(0) === '?') {\r\n        var num = parseInt(text.slice(1))\r\n        if (!isNaN(num)) {\r\n            return { _param: num }\r\n        } else {\r\n            return text\r\n        }\r\n    } else {\r\n        return text\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction assignParamIds(query) {\r\n    var index = 0\r\n    return query.replace(/\\?/g, function (match) {\r\n        return match + (index++)\r\n    })\r\n}\r\n\r\nfunction last(array) {\r\n    return array[array.length - 1]\r\n}","﻿import { State } from \"./state\"\r\nimport { tokenize } from \"./tokenize\"\r\n\r\nvar tokenizedCache = {}\r\nexport function jsonQuery(query, options) {\r\n\r\n    // extract params for ['test[param=?]', 'value'] type queries\r\n    var params = options && options.params || null\r\n    if (Array.isArray(query)) {\r\n        params = query.slice(1)\r\n        query = query[0]\r\n    }\r\n\r\n    if (!tokenizedCache[query]) {\r\n        tokenizedCache[query] = tokenize(query, true)\r\n    }\r\n\r\n    return handleQuery(tokenizedCache[query], options, params)\r\n}\r\n\r\n\r\nexport function lastParent(query) {\r\n    var last = query.parents[query.parents.length - 1]\r\n    if (last) {\r\n        return last.value\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\n\r\nfunction handleQuery(tokens, options, params) {\r\n    var state = new State(options, params, handleQuery)\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (handleToken(tokens[i], state)) {\r\n            break\r\n        }\r\n    }\r\n\r\n    // flush\r\n    handleToken(null, state)\r\n\r\n    // set databind hooks\r\n    if (state.currentItem instanceof Object) {\r\n        state.addReference(state.currentItem)\r\n    } else {\r\n        var parentObject = getLastParentObject(state.currentParents)\r\n        if (parentObject) {\r\n            state.addReference(parentObject)\r\n        }\r\n    }\r\n\r\n    return {\r\n        value: state.currentItem,\r\n        key: state.currentKey,\r\n        references: state.currentReferences,\r\n        parents: state.currentParents\r\n    }\r\n}\r\n\r\nfunction handleToken(token, state) {\r\n    // state: setCurrent, getValue, getValues, resetCurrent, deepQuery, rootContext, currentItem, currentKey, options, filters\r\n\r\n    if (token == null) {\r\n        // process end of query\r\n        if (!state.currentItem && state.options.force) {\r\n            state.force(state.options.force)\r\n        }\r\n    } else if (token.values) {\r\n        if (state.currentItem) {\r\n            var keys = Object.keys(state.currentItem)\r\n            var values = []\r\n            keys.forEach(function (key) {\r\n                if (token.deep && Array.isArray(state.currentItem[key])) {\r\n                    state.currentItem[key].forEach(function (item) {\r\n                        values.push(item)\r\n                    })\r\n                } else {\r\n                    values.push(state.currentItem[key])\r\n                }\r\n            })\r\n            state.setCurrent(keys, values)\r\n        } else {\r\n            state.setCurrent(keys, [])\r\n        }\r\n    } else if (token.get) {\r\n        var key = state.getValue(token.get)\r\n        if (shouldOverride(state, key)) {\r\n            state.setCurrent(key, state.override[key])\r\n        } else {\r\n            if (state.currentItem || (state.options.force && state.force({}))) {\r\n                if (isDeepAccessor(state.currentItem, key) || token.multiple) {\r\n                    let values = state.currentItem.map(function (item) {\r\n                        return item[key]\r\n                    }).filter(isDefined)\r\n\r\n                    values = Array.prototype.concat.apply([], values) // flatten\r\n\r\n                    state.setCurrent(key, values)\r\n                } else {\r\n                    state.setCurrent(key, state.currentItem[key])\r\n                }\r\n            } else {\r\n                state.setCurrent(key, null)\r\n            }\r\n        }\r\n    } else if (token.select) {\r\n        if (Array.isArray(state.currentItem) || (state.options.force && state.force([]))) {\r\n            var match = (token.boolean ? token.select : [token]).map(function (part) {\r\n                if (part.op === ':') {\r\n                    var key = state.getValue(part.select[0])\r\n                    return {\r\n                        func: function (item) {\r\n                            if (key) {\r\n                                item = item[key]\r\n                            }\r\n                            return state.getValueFrom(part.select[1], item)\r\n                        },\r\n                        negate: part.negate,\r\n                        booleanOp: part.booleanOp\r\n                    }\r\n                } else {\r\n                    var selector = state.getValues(part.select)\r\n                    if (!state.options.allowRegexp && part.op === '~' && selector[1] instanceof RegExp) throw new Error('options.allowRegexp is not enabled.')\r\n                    return {\r\n                        key: selector[0],\r\n                        value: selector[1],\r\n                        negate: part.negate,\r\n                        booleanOp: part.booleanOp,\r\n                        op: part.op\r\n                    }\r\n                }\r\n            })\r\n\r\n            if (token.multiple) {\r\n                let keys = []\r\n                var value = []\r\n                state.currentItem.forEach(function (item, i) {\r\n                    if (matches(item, match)) {\r\n                        keys.push(i)\r\n                        value.push(item)\r\n                    }\r\n                })\r\n                state.setCurrent(keys, value)\r\n            } else {\r\n                if (!state.currentItem.some(function (item, i) {\r\n                    if (matches(item, match)) {\r\n                        state.setCurrent(i, item)\r\n                        return true\r\n                    }\r\n                })) {\r\n                    state.setCurrent(null, null)\r\n                }\r\n            }\r\n        } else {\r\n            state.setCurrent(null, null)\r\n        }\r\n    } else if (token.root) {\r\n        state.resetCurrent()\r\n        if (token.args && token.args.length) {\r\n            state.setCurrent(null, state.getValue(token.args[0]))\r\n        } else {\r\n            state.setCurrent(null, state.rootContext)\r\n        }\r\n    } else if (token.parent) {\r\n        state.resetCurrent()\r\n        state.setCurrent(null, state.options.parent)\r\n    } else if (token.or) {\r\n        if (state.currentItem) {\r\n            return true\r\n        } else {\r\n            state.resetCurrent()\r\n            state.setCurrent(null, state.context)\r\n        }\r\n    } else if (token.filter) {\r\n        var helper = state.getLocal(token.filter) || state.getGlobal(token.filter)\r\n        if (typeof helper === 'function') {\r\n            // function(input, args...)\r\n            let values = state.getValues(token.args || [])\r\n            var result = helper.apply(state.options, [state.currentItem].concat(values))\r\n            state.setCurrent(null, result)\r\n        } else {\r\n            // fallback to old filters\r\n            var filter = state.getFilter(token.filter)\r\n            if (typeof filter === 'function') {\r\n                let values = state.getValues(token.args || [])\r\n                var result = filter.call(state.options, state.currentItem, { args: values, state: state, data: state.rootContext })\r\n                state.setCurrent(null, result)\r\n            }\r\n        }\r\n    } else if (token.deep) {\r\n        if (state.currentItem) {\r\n            if (token.deep.length === 0) {\r\n                return\r\n            }\r\n\r\n            var result = state.deepQuery(state.currentItem, token.deep, state.options)\r\n            if (result) {\r\n                state.setCurrent(result.key, result.value)\r\n                for (var i = 0; i < result.parents.length; i++) {\r\n                    state.currentParents.push(result.parents[i])\r\n                }\r\n            } else {\r\n                state.setCurrent(null, null)\r\n            }\r\n        } else {\r\n            state.currentItem = null\r\n        }\r\n    }\r\n}\r\n\r\nfunction matches(item, parts) {\r\n    var result = false\r\n    for (var i = 0; i < parts.length; i++) {\r\n        var opts = parts[i]\r\n        var r = false\r\n        if (opts.func) {\r\n            r = opts.func(item)\r\n        } else if (opts.op === '~') {\r\n            if (opts.value instanceof RegExp) {\r\n                r = item[opts.key] && !!item[opts.key].match(opts.value)\r\n            } else {\r\n                r = item[opts.key] && !!~item[opts.key].indexOf(opts.value)\r\n            }\r\n        } else if (opts.op === '=') {\r\n            if ((item[opts.key] === true && opts.value === 'true') || (item[opts.key] === false && opts.value === 'false')) {\r\n                r = true\r\n            } else {\r\n                r = item[opts.key] == opts.value\r\n            }\r\n        } else if (opts.op === '>') {\r\n            r = item[opts.key] > opts.value\r\n        } else if (opts.op === '<') {\r\n            r = item[opts.key] < opts.value\r\n        } else if (opts.op === '>=') {\r\n            r = item[opts.key] >= opts.value\r\n        } else if (opts.op === '<=') {\r\n            r = item[opts.key] <= opts.value\r\n        }\r\n\r\n        if (opts.negate) {\r\n            r = !r\r\n        }\r\n        if (opts.booleanOp === '&') {\r\n            result = result && r\r\n        } else if (opts.booleanOp === '|') {\r\n            result = result || r\r\n        } else {\r\n            result = r\r\n        }\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nfunction isDefined(value) {\r\n    return typeof value !== 'undefined'\r\n}\r\n\r\nfunction shouldOverride(state, key) {\r\n    return state.override && state.currentItem === state.rootContext && state.override[key] !== undefined\r\n}\r\n\r\nfunction isDeepAccessor(currentItem, key) {\r\n    return currentItem instanceof Array && parseInt(key) != key\r\n}\r\n\r\nfunction getLastParentObject(parents) {\r\n    for (var i = 0; i < parents.length; i++) {\r\n        if (!(parents[i + 1]) || !(parents[i + 1].value instanceof Object)) {\r\n            return parents[i].value\r\n        }\r\n    }\r\n}","﻿import { jsonQuery } from '../../../widget_library/jsonquery/jsonquery.js';\r\n\r\nexport class ObjectFormatter {\r\n\r\n    static objectfunctions = {\r\n        compose: (data, object) => ObjectFormatter.compose(data, object),\r\n        concat: (value, stringTemplate) => ObjectFormatter.concat(value, stringTemplate)\r\n    }\r\n\r\n\r\n    static compose(data: any, object: Object): any {\r\n        let newObj = object;\r\n        for (let o in object) {\r\n            newObj[o] = jsonQuery(object[o], { data: data }).value\r\n        }\r\n        return newObj;\r\n    }\r\n\r\n\r\n    static concat(value: any, stringTemplate: any): any {\r\n\r\n        // get build function\r\n        let func = this.buildFunction(value, stringTemplate);\r\n\r\n        let params = [];\r\n        for (var v in value) {\r\n            params.push(value[v]);\r\n        }\r\n        return func(...params);\r\n    }\r\n\r\n    static buildFunction = (value, s) => {\r\n\r\n        let params = [];\r\n        for (var v in value) {\r\n            params.push(v);\r\n        }\r\n\r\n        params.push(`return \\`${s}\\``)\r\n        return new Function(...params);\r\n    }\r\n}","﻿export class StringFormatter {\r\n\r\n\r\n    static stringfunctions = {\r\n        split: (value, separator, index) => value.split(separator)[index],\r\n        concat: (value, ...strings) => value.concat(...strings),\r\n        join: (array, separator) => StringFormatter.join(array, separator)\r\n    }\r\n\r\n    static join(array: any, separator: string): string {\r\n        return Array.prototype.join.apply(array, separator);\r\n    }\r\n\r\n}\r\n","﻿import { BooleanFormatter } from \"./booleanformatter\";\r\nimport { DateTimeFormatter } from \"./datetimeformatter\";\r\nimport { NumberFormatter } from \"./numberformatter\";\r\nimport { ObjectFormatter } from \"./objectformatter\";\r\nimport { StringFormatter } from \"./stringformatter\";\r\nimport { Field, ValueDescriptor } from \"../models/templatemodel\";\r\nimport { jsonQuery } from '../../../widget_library/jsonquery/jsonquery.js';\r\n\r\nexport class DataFormatter {\r\n\r\n\r\n    static typeformatter = {\r\n        \"datetime\": DateTimeFormatter.datefunctions,\r\n        \"string\": StringFormatter.stringfunctions,\r\n        \"number\": NumberFormatter.numberfunctions,\r\n        \"boolean\": BooleanFormatter.booleanfunctions,\r\n        \"object\": ObjectFormatter.objectfunctions\r\n    }\r\n\r\n    static getFormattedValue(data: any, field: Field): any {\r\n\r\n        // Check if Path is given\r\n        if (this.isEmptyValueDescriptor(field.ValueDescriptor)) return null;\r\n\r\n        // Retrieve data\r\n        let typeOfData = field.ValueDescriptor.Type;\r\n        let retrievedData;\r\n\r\n        // Check if static\r\n        if (typeOfData === 'static') {\r\n            return field.ValueDescriptor.Path;\r\n        } else {\r\n            retrievedData = this.retreiveData(data, field.ValueDescriptor.Path);\r\n        }\r\n\r\n        // Formatting data\r\n        let currentValue = retrievedData;\r\n        let formatters = this.typeformatter[typeOfData];\r\n        let temp;\r\n        for (let i = 0; i < field.Formatters.length; i++) {\r\n\r\n            temp = field.Formatters[i].match(/(.*)\\((.*)\\)/);\r\n            let params = window.eval('[' + temp[2] + ']');\r\n            let funcName = temp[1];\r\n            if (formatters[funcName]) {\r\n                currentValue = formatters[funcName].apply(null, [currentValue, ...params]);\r\n            } else {\r\n                if (currentValue[funcName]) {\r\n                    currentValue[funcName].apply(currentValue, [...params])\r\n                }\r\n            }\r\n        }\r\n        return currentValue;\r\n    }\r\n\r\n    static retreiveData(data: any, path: string): any {\r\n        var result = jsonQuery(path, { data: data }).value\r\n        return result;\r\n    }\r\n\r\n    static isEmptyValueDescriptor(valueDescriptor: ValueDescriptor): boolean {\r\n        return valueDescriptor?.Path == null || valueDescriptor?.Type == null;\r\n    }\r\n}","﻿import { html, TemplateResult } from \"lit-html\";\r\nimport { repeat } from \"lit-html/directives/repeat\";\r\nimport { DataValidator } from \"../helpers/datavalidator\";\r\nimport { Section } from \"../models/templatemodel\";\r\nimport { DataFormatter } from \"./dataformatter\";\r\n\r\nexport class TableFormatter {\r\n\r\n\r\n    static tableWriters = {\r\n        \"sumCol\": (table, fields, text, colNum) => TableFormatter.sumCol(table, fields, text, colNum)\r\n    }\r\n\r\n    static renderTable(data: any, section: Section): TemplateResult {\r\n\r\n        // Retrieve list with data\r\n        let list = DataFormatter.retreiveData(data, section.ValueDescriptor.Path);\r\n\r\n        // Resulting table\r\n        let resultTable = new Table();\r\n\r\n        // Header\r\n        resultTable.header = [];\r\n        resultTable.header.push([...section.Fields.map(f => f.Label)]);\r\n\r\n        // Body\r\n        for (let i = 0; i < list.length; i++) {\r\n            let row = [];\r\n            let d = list[i];\r\n            section.Fields.forEach(f => {\r\n                row.push(DataFormatter.getFormattedValue(d, f));\r\n            });\r\n            resultTable.body.push(row);\r\n        }\r\n\r\n        // Footer\r\n        section.Formatters.forEach(f => {\r\n            resultTable = TableFormatter.appylFormatters(resultTable, f)\r\n\r\n        });\r\n\r\n        return html` <table>\r\n                        <thead>\r\n                             ${repeat(resultTable.header, r => html`<tr>${repeat(<any>r, c => html`<th>${c}</th>`)} </tr>`)}\r\n                        </thead>\r\n                        <tbody id=\"table-items\">    \r\n                             ${repeat(resultTable.body, r => html`<tr>${repeat(<any>r, c => html`<td>${c}</td>`)} </tr>`)}     \r\n                        </tbody>\r\n                        ${resultTable.footer.length ? html`\r\n                        <tfoot>\r\n                             ${repeat(resultTable.footer, r => html`<tr>${repeat(<any>r, c => html`<td>${c}</td>`)} </tr>`)}\r\n                        </tfoot>  `: html``}\r\n                               \r\n                    </table>`\r\n    }\r\n\r\n    static appylFormatters(data: Table, formatter: string): any {\r\n        let temp = formatter.match(/(.*)\\((.*)\\)/);\r\n        let params = window.eval('[' + temp[2] + ']');\r\n        let funcName = temp[1];\r\n        if (TableFormatter.tableWriters[funcName]) {\r\n            return TableFormatter.tableWriters[funcName].apply(null, [data, ...params]);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    static sumCol(table: Table, fields: Array<number>, text: string, colNum: number): Table {\r\n\r\n        let tempTable = new Table();\r\n        let offset = 0;\r\n        if (colNum == -1) {\r\n            for (let i in table) {\r\n                for (let j of table[i]) {\r\n                    tempTable[i].push([null, ...j]);\r\n                }\r\n            }\r\n            offset = 1;\r\n        } else {\r\n            tempTable.header = [...table.header];\r\n            tempTable.body = [...table.body];\r\n            tempTable.footer = [...table.footer];\r\n        }\r\n\r\n        let result = [];\r\n        fields.forEach(f => {\r\n            let sum = 0;\r\n            try {\r\n                sum = tempTable.body.reduce((agg, curr) => {\r\n\r\n                    let tall = curr[f + offset];\r\n                    let number = DataValidator.isNumber(tall);\r\n                    return agg += number ? parseFloat(tall) : 0;\r\n                }, 0)\r\n                result[f + offset] = sum;\r\n            } catch (e) {\r\n                result[f + offset] = e;\r\n            }\r\n        });\r\n\r\n        for (var i = 0, n = tempTable.body[0].length; i < n; ++i) {\r\n            if (result[i] === undefined) {       // explicit check for missing sparse value\r\n                result[i] = '';\r\n            }\r\n        }\r\n        result[offset + colNum] = text;\r\n        tempTable.footer.push(result);\r\n        return tempTable;\r\n    }\r\n\r\n}\r\nclass Table {\r\n    public header = [];\r\n    public body = [];\r\n    public footer = [];\r\n}\r\n","﻿import { html, TemplateResult } from \"lit-html\";\r\nimport { DateFormatter } from \"../../shared/dateformat\";\r\nimport { Field } from \"../models/templatemodel\";\r\nimport { DataFormatter } from \"./dataformatter\";\r\nimport { DataValidator } from \"./datavalidator\";\r\n\r\nexport class DataRetriever {\r\n\r\n    public _dateFormatter: DateFormatter = null;\r\n\r\n    public constructor() {\r\n        this._dateFormatter = new DateFormatter();\r\n    }\r\n\r\n    public getDataFromField(data: any, field: Field): any {\r\n        return this.formatStringValues(this.getStringFromObject(data, field.Value));\r\n    }\r\n    public getStringFromObject(data: any, field: any): any {\r\n\r\n        if (field.includes(\".\")) {\r\n\r\n            let [object, value] = this.getSplitValues(field, \".\")\r\n            let dataObject = data[object];\r\n\r\n            if (Array.isArray(dataObject)) {\r\n                return this.getValueFromKey(dataObject, value);\r\n            } else {\r\n                return dataObject[value];\r\n            }\r\n        }\r\n        return data[field];\r\n    }\r\n\r\n    private formatStringValues(value: any): any {\r\n        if (value == \"true\") {\r\n            return \"Yes\";\r\n        } else if (value == \"false\") {\r\n            return \"No\";\r\n        }\r\n        return value;\r\n    }\r\n\r\n    public getConcattedValuesWithSeparator(data: any, field: Field): any {\r\n\r\n        let array = field.Value.split(\"|\");\r\n        let element;\r\n        let text = '';\r\n        for (let i = 0; i < array.length; i++) {\r\n            element = array[i];\r\n            element = this.getStringFromObject(data, element);\r\n            text += element;\r\n            if (i != array.length - 1) { text += \" \" + field.Format + \" \"; }\r\n        }\r\n        return text;\r\n    }\r\n\r\n\r\n\r\n    public toggleLabel(field: Field): TemplateResult {\r\n        let hideLabel = DataValidator.isEmpty(field.Label);\r\n        return html`${hideLabel ? html`` : html`<span class=\"label\">${field.Label.replace(\"!\", \"\")}&nbsp;</span>`}`;\r\n    }\r\n\r\n    public toggleValue(field: Field): TemplateResult {\r\n        let hideValue = DataValidator.isEmpty(field.Value);\r\n        return html`${hideValue ? html`` : html`<span class=\"text ${field.Format}\">${field.Value}&nbsp;</span>`}`;\r\n    }\r\n\r\n\r\n    public isEmptyValue(data: any, label: any): boolean {\r\n        let missingValue = data === null || data === \"\" || data === undefined;\r\n        return (missingValue && label.includes(\"!\")) ? true : false;\r\n    }\r\n\r\n    public outputValidator(data: any, field: Field, input: TemplateResult): TemplateResult {\r\n        try {\r\n            let tempData = this.getReturnType(data, field);\r\n            return this.isEmptyValue(tempData, field.Label) ? html`` : DataFormatter.encapsulateFieldTypeOutputInSpan(input, field);\r\n        } catch (error) {\r\n            console.log(`Error in field type ${field.Type}, check that label: %c${field.Label}%c and value: %c${field.Value}%c are correct.`, \"color: red\", \"color: black\", \"color: red\", error);\r\n            console.log(error.message);\r\n        }\r\n    }\r\n\r\n    public getSplitValues(data: any, seperator: string): any {\r\n        let objectToSplit = data.split(seperator);\r\n        return [objectToSplit[0], objectToSplit[1]];\r\n    }\r\n\r\n\r\n    public getLabelWithLabelFormatting(field: Field): TemplateResult {\r\n        let label = this.toggleLabel(field);\r\n        return DataFormatter.encapsulateTextInSpanWithClass(label, \"label\");\r\n    }\r\n\r\n\r\n    public getValueFromKey(dataObject: any, key: any): any {\r\n\r\n        for (let i = 0; i < dataObject.length; i++) {\r\n            let element = dataObject[i];\r\n\r\n            if (element[\"Key\"] == key) {\r\n                return element[\"Value\"];\r\n            }\r\n        }\r\n    }\r\n    public getElementFromKey(dataObject: any, key: any, value: any): any {\r\n\r\n        let element;\r\n        for (let i = 0; i < dataObject.length; i++) {\r\n            element = dataObject[i];\r\n            if (element[key] == value) {\r\n                return element;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public formatNumbers(data: any, format: any): any {\r\n\r\n        let number = data;\r\n        if (format != null && /^\\d+$/.test(format)) {\r\n            let roundedNumber = Math.pow(10, parseFloat(format));\r\n            number = Math.round(data * roundedNumber) / roundedNumber;\r\n        }\r\n        return number;\r\n    }\r\n\r\n\r\n    public getReturnType(data: any, field: Field): any {\r\n        if (data instanceof Date) {\r\n            // is date \r\n            return this._dateFormatter.dateFormat(new Date(data), field.Format);\r\n        }\r\n        else if (/^[0-9,.]*$/.test(data)) {\r\n            // is number\r\n            let result;\r\n            if (field.Format.includes(\".\")) {\r\n                let formatArray = field.Format.split(\".\");\r\n                result = this.formatNumbers(data, formatArray[0]) + \" \" + formatArray[1];\r\n            }\r\n            else {\r\n                result = this.formatNumbers(data, field.Format)\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            // is string\r\n            return this.getDataFromField(data, field);\r\n        }\r\n    }\r\n}","﻿import { html, TemplateResult } from \"lit-html\";\r\nimport { DataValidator } from \"../helpers/datavalidator\";\r\nimport { Field } from \"../models/templatemodel\";\r\n\r\nexport class FieldWriter {\r\n\r\n    static getLabelWithData(data: any, field: Field): TemplateResult {\r\n\r\n        if (data) {\r\n            return html`<div><span class=\"label ${field?.Options?.styleClass}\">${field.Label}&nbsp;</span><span class=\"value\">${data}</span></div>`;\r\n        }\r\n\r\n        if (field?.Options?.hideLabelIfDataIsEmpty) {\r\n            return html``;\r\n        }\r\n\r\n        return html` <div> <span class=\"label\" > ${field.Label}&nbsp; </span></div>`;\r\n    }\r\n\r\n    static getEmptyField(): TemplateResult {\r\n        return html`<br>`;\r\n    }\r\n\r\n    static getLineField(): TemplateResult {\r\n        return html`<hr>`;\r\n    }\r\n\r\n    static getMultiline(data: any, field: Field): TemplateResult {\r\n\r\n        if (data) {\r\n            let multiline = field.Options.Multiline;\r\n\r\n            // check if multiline is not configuredd in SysAdmin even though the data require multiline\r\n            if (DataValidator.isEmpty(multiline)) {\r\n\r\n                //default is multiline 5 lines\r\n                multiline = 5;\r\n            }\r\n            return html`<div><span class=\"label ${field?.Options?.styleClass}\" style=\"display:block\">${field.Label}</span><div class=\"textContainer multiline\" style = \"max-height:${multiline}em\" id = \"multiline\" > ${data} </div></div>`;\r\n        }\r\n\r\n        if (field?.Options?.hideLabelIfDataIsEmpty) {\r\n            return html``;\r\n        }\r\n\r\n        return html` <div> <span class=\"label\"> ${field.Label}</span></div>`;\r\n    }\r\n\r\n    static getCheckbox(data: any, field: Field): TemplateResult {\r\n\r\n        if (data === false || data === true) {\r\n            let isTrue = data === true;\r\n\r\n            let checkbox = isTrue ? html`<input type='checkbox' checked />` : html`<input type='checkbox' />`;\r\n            return html`<div ><div style=\"display:inline\" class=\"checkboxContainer\" > ${checkbox}<span class=\"checkmark\" > </span> </div ><span class=\"label ${field?.Options?.styleClass}\" style=\"display:inline\">${field.Label}</span></div>`;\r\n        }\r\n\r\n        if (field?.Options?.hideLabelIfDataIsEmpty) {\r\n            return html``;\r\n        }\r\n\r\n        return html` <div > </span> <div class=\"checkboxContainer\" > <input type='checkbox' /> <span class=\"checkmark\" > </span></div> <span class=\"label\" > ${field.Label} </div>`;\r\n    }\r\n}","﻿import { html, TemplateResult } from \"lit-html\";\r\nimport { repeat } from \"lit-html/directives/repeat\";\r\nimport { until } from \"lit-html/directives/until\";\r\nimport { ITemplateRetriever } from \"../../genericdetailviewmanager/interfaces/itemplateretriever\";\r\nimport { CheckboxService } from \"../discontinued/services/checkboxservice\";\r\nimport { DateService } from \"../discontinued/services/dateservice\";\r\nimport { IconService } from \"../discontinued/services/iconservice\";\r\nimport { LinkService } from \"../discontinued/services/linkservice\";\r\nimport { ListService } from \"../discontinued/services/listservice\";\r\nimport { ObjectService } from \"../discontinued/services/objectservice\";\r\nimport { TextService } from \"../discontinued/services/textservice\";\r\nimport { DataFormatter } from \"../formatters/dataformatter\";\r\nimport { TableFormatter } from \"../formatters/tableformatter\";\r\nimport { DataRetriever } from \"../helpers/dataretriever\";\r\nimport { Field, Section } from \"../models/templatemodel\";\r\nimport { FieldWriter } from \"../writers/fieldwriter\";\r\n\r\nexport class TemplateEngine {\r\n    private subViewState: any = null;\r\n    private templateRetriever: ITemplateRetriever = null\r\n    private host: any = null;\r\n    private dateService: DateService = null;\r\n    private textService: TextService = null\r\n    private iconService: IconService = null;\r\n    private checkboxService: CheckboxService = null;\r\n\r\n    public constructor(templateRetriever: ITemplateRetriever, host: any) {\r\n        this.templateRetriever = templateRetriever;\r\n        this.host = host;\r\n\r\n        let dataHelper = new DataRetriever();\r\n        this.dateService = new DateService(dataHelper);\r\n        this.textService = new TextService(dataHelper);\r\n        this.iconService = new IconService(dataHelper);\r\n        this.checkboxService = new CheckboxService(dataHelper);\r\n    }\r\n\r\n    private SectionWriters = {\r\n        \"1\": (data, section) => this.renderSectionOld(data, section),\r\n        \"2\": (data, section) => this.renderSectionOld(data, section),\r\n        \"3\": (data, section) => this.renderSectionOld(data, section),\r\n        \"4\": (data, section) => this.renderListWithSubViewSection(data, section),\r\n        \"6\": (data, section) => this.renderNonClickableList(data, section),\r\n        \"8\": (data, section) => this.renderExternalData(data, section),\r\n        \"Standard\": (data, section) => this.renderStandard(data, section),\r\n        \"ClickableList\": (data, section) => this.renderClickableList(data, section),\r\n        \"Table\": (data, section) => TableFormatter.renderTable(data, section),\r\n        \"Tab\": (data, section) => this.renderTabList(data, section),\r\n        \"ExternalData\": (data, section) => this.renderExternalDataNew(data, section)\r\n    }\r\n\r\n    private FieldWriters = {\r\n        \"LabelWithData\": (data, field) => FieldWriter.getLabelWithData(data, field),\r\n        \"Multiline\": (data, field) => FieldWriter.getMultiline(data, field),\r\n        \"CheckBox\": (data, field) => FieldWriter.getCheckbox(data, field),\r\n        \"Empty\": () => FieldWriter.getEmptyField(),\r\n        \"Line\": () => FieldWriter.getLineField()\r\n    }\r\n\r\n    private FieldWriter_TOBEDISCONTINUED = {\r\n        \"1\": (data, field) => this.textService.getTextOneLine(data, field),\r\n        \"2\": (data, field) => this.textService.getTextTwoLines(data, field),\r\n        \"3\": (data, field) => LinkService.getLinktoHTML(data, field),\r\n        \"4\": (data, field) => this.dateService.getDate(data, field),\r\n        \"5\": (data, field) => this.textService.getSplitStringOnFirstOccurenceSelectSpecificPart(data, field, 0),\r\n        \"6\": (data, field) => this.textService.getDataValueToString(data, field),\r\n        \"7\": (data, field) => this.textService.getFieldValueToString(data, field),\r\n        \"8\": (data, field) => this.textService.getTextNoLabel(data, field),\r\n        \"9\": (data, field) => this.dateService.getDateNoLabel(data, field),\r\n        \"10\": (data, field) => this.textService.getSplitStringOnFirstOccurenceSelectSpecificPart(data, field, 1),\r\n        \"11\": (data, field) => ObjectService.getObjectValuesWithDevider(data, field),\r\n        \"12\": (data, field) => this.textService.getArrayValues(data, field),\r\n        \"13\": (data, field) => this.checkboxService.getCheckboxWithLabel(data, field),\r\n        \"14\": (data, field) => this.iconService.getIconWithLabel(data, field),\r\n        \"15\": (data, field) => this.iconService.getLineSeperator(data, field),\r\n        \"16\": (data, field) => this.textService.getValueWithDenomination(data, field),\r\n        \"17\": (data, field) => this.iconService.getEmptyLine(data, field),\r\n        \"18\": (data, field) => this.textService.staticText(data, field),\r\n        \"19\": (data, field) => this.textService.formattedNumbers(data, field),\r\n        \"20\": (data, field) => this.textService.customBooleanValues(data, field),\r\n        \"21\": (data, field) => this.textService.getConcattedValues(data, field),\r\n        \"22\": (data, field) => this.textService.getStringReplaceWithData(data, field),\r\n        \"23\": (data, field) => this.textService.getValueInComplexObject(data, field)\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    // \r\n    //  Render Section...\r\n    //\r\n    //-------------------------------------------------------------------------\r\n\r\n    public renderData(data: any, sections: Section[]): TemplateResult {\r\n        return html` ${repeat(sections, s => s.Id, s => {\r\n            try {\r\n                return this.renderTemplateSections(data, s)\r\n            }\r\n            catch (e) {\r\n                return html`<div class=\"exception\">${e}</div>`\r\n            }\r\n        }\r\n        )}`;\r\n    }\r\n\r\n    private renderTemplateSections(data: any, section: Section): TemplateResult {\r\n        try {\r\n            return html`<div id=\"_${section.Id}\" class=\"SectionType_${section.Type}\"> ${this.SectionWriters[section.Type](data, section)} </div>`;\r\n        }\r\n        catch (e) {\r\n            return html`<div class=\"exception\">${e}</div>`\r\n        }\r\n    }\r\n\r\n    private renderTemplateFieldsNew(data: any, fields: Field[]): TemplateResult {\r\n        return html`${repeat(fields, (f: any) => f.Id, f => {\r\n            try {\r\n                return this.FieldWriters[f.Type](DataFormatter.getFormattedValue(data, f), f)\r\n\r\n            } catch (e) {\r\n                return html`<div class=\"exception\">${e}</div>`\r\n            }\r\n        }\r\n        )}`;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    // \r\n    //  Private methods Section\r\n    //\r\n    //-------------------------------------------------------------------------\r\n\r\n    private renderStandard(data: any, section: any) {\r\n        try {\r\n            return html`${this.renderTemplateFieldsNew(data, section.Fields)}`\r\n\r\n        } catch (e) {\r\n            return html`<div class=\"exception\">${e}</div>`\r\n        }\r\n    }\r\n\r\n    private renderClickableList(data: any, section: Section): TemplateResult {\r\n        if (!data.__viewState) {\r\n            data.__viewState = {};\r\n        }\r\n        this.subViewState = data.__viewState[section.Id] = data.__viewState[section.Id] || {};\r\n        let list = DataFormatter.retreiveData(data, section.ValueDescriptor.Path);\r\n        let listItemIdentifier = section.Options.ListItemIdentifier;\r\n        if (list.length == 0) return html``;\r\n\r\n        //Format list\r\n        let formattedList = list;\r\n        section.Formatters.forEach(f => {\r\n            formattedList = TableFormatter.appylFormatters(formattedList, f)\r\n\r\n        });\r\n\r\n        try {\r\n            return html`\r\n                    <div class=\"list-label\">${section.Options.Title} (${formattedList.length})</div>\r\n                    <div id=\"container-list-items\" class=\"container-list-items\">\r\n                        <ul>\r\n                            ${repeat(formattedList, i => i[listItemIdentifier], i => this.renderListItem(i, section))}\r\n                        </ul>\r\n                    </div>\r\n                    ${this.renderSelectedListItem(list, section)}`;\r\n        }\r\n        catch (e) {\r\n            return html`<div class=\"exception\">${e}</div>`\r\n        }\r\n    }\r\n\r\n    private getItemLabel(data: any, section: Section): TemplateResult {\r\n        return html`${repeat(section.Fields, f => {\r\n            if (f.ValueDescriptor.Type == 'static') return html`${f.ValueDescriptor.Path}`;\r\n            return DataFormatter.retreiveData(data, f.ValueDescriptor.Path);\r\n        })}`;\r\n    }\r\n\r\n    private renderListItem(item: any, section: Section): TemplateResult {\r\n\r\n        return html`\r\n            <li>\r\n                <div class='list-item' @click=${() => { this.listItemOnClick(item[section.Options.ListItemIdentifier]) }}>\r\n                    <span class='label'>${this.getItemLabel(item, section)}</span>\r\n                    <span class='container-arrow'>\r\n                        <svg class='more arrow' height=\"9.471\" viewBox=\"0 0 5.848 9.471\">\r\n                            <path d=\"M8.59,14.358,12.2,10.735,8.59,7.113,9.7,6l4.735,4.735L9.7,15.47Z\" transform=\"translate(-8.59 -6)\" />\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n            </li>`;\r\n    }\r\n\r\n    private renderSelectedListItem(list: any, section: Section): TemplateResult {\r\n\r\n        return html`${this.subViewState.selected ?\r\n            until(this.renderTemplateForListItem(list.find(e => e[section.Options.ListItemIdentifier] == this.subViewState.selected), section.Options.TemplateId), html``) : html``}`;\r\n    }\r\n\r\n    private async renderTemplateForListItem(data: any, templateId: string): Promise<TemplateResult> {\r\n\r\n        let template = await this.templateRetriever.getTemplateFromTemplateId(templateId);\r\n\r\n        let sections = template.Template.Content as unknown as Section[];\r\n\r\n        return html`\r\n                    <div class=\"slide-in\" id=\"slider\">\r\n                        <div class=\"detail-view ${this.host.viewClass}\">\r\n                            <div class=\"container-button\">${this.renderBackButton()}</div>\r\n                            <div> ${(this.renderData(data, sections))}</div>\r\n                        </div>\r\n                    </div>`;\r\n    }\r\n\r\n    private async renderTemplateForTab(data: any, templateId: string): Promise<TemplateResult> {\r\n        let template = await this.templateRetriever.getTemplateFromTemplateId(templateId);\r\n        let sections = template.Template.Content as unknown as Section[];\r\n        return html`<div>${this.renderData(data, sections)}</div>`\r\n    }\r\n\r\n    private renderTabList(data: any, section: Section): TemplateResult {\r\n\r\n\r\n        let tabcontent = DataFormatter.retreiveData(data, section.ValueDescriptor.Path);\r\n        if (tabcontent.length == 0) return html``;\r\n\r\n        let tabState = {\r\n            currentIndex: 0, tabOnClick: (index, element) => {\r\n\r\n                [...element.parentElement.children].forEach(c => c.classList.remove('selectedTab'));\r\n                element.classList.add('selectedTab');\r\n                tabState.currentIndex = index;\r\n\r\n                let tabcontent = [...element.closest('div').children];\r\n                tabcontent.forEach(c => c.classList.remove('selectedContent'));\r\n                tabcontent[index + 1].classList.add('selectedContent');\r\n            }\r\n        };\r\n\r\n        return html`<div class='tabstrip'>\r\n                    <ul class=\"tabheader\" id='tabheader'>\r\n                        ${repeat(tabcontent, (t, i) =>\r\n            html` \r\n                                <li class=\"tab-button ${i === tabState.currentIndex ? 'selectedTab' : ''}\"  @click=${(e) => { tabState.tabOnClick(i, e.target) }}>\r\n                                    ${this.getItemLabel(t, section)}\r\n                                </li>`\r\n        )}\r\n                    </ul>\r\n            ${repeat(tabcontent, (t, i) =>\r\n            html`\r\n                   <div id='tabcontent' class='tabcontent ${i === tabState.currentIndex ? 'selectedContent' : ''}'>  ${until(this.renderTemplateForTab(t, section.Options.TemplateId), html`..Loading`)}</div>`\r\n        )}\r\n                </div>`;\r\n    }\r\n\r\n    private renderExternalDataNew(data: any, section: any): TemplateResult {\r\n\r\n        let resolveFunction;\r\n        const promise = new Promise<void>((resolve, reject) => {\r\n            resolveFunction = resolve;\r\n        });\r\n\r\n        let callback = (callbackData) => {\r\n            try {\r\n                callbackData ? resolveFunction(html`<span class=\"popupexternaldata\" @click=${(event) => this.host.openPopUpExternalData(callbackData, section.ValueDescription.Path, event)}>${this.renderTemplateFieldsNew(callbackData, section.Fields)}</span>`)\r\n                    : null;\r\n            } catch (error) {\r\n                console.log(error.message)\r\n            }\r\n        };\r\n        this.host.loadExternalData(data, section.Options.datasource, callback);\r\n\r\n        //Render plugin data\r\n        return html`${until(promise, html``)}`\r\n    }\r\n\r\n    private renderBackButton(): TemplateResult {\r\n        return html`\r\n                <div id=\"toggle\" class='back-button' @click=${(e) => this.toggleSubView()}>\r\n                    <div>                \r\n                        <svg class=\"arrow\" viewBox=\"0 0 16 8\">\r\n                            <path d=\"M7.99,11H20v2H7.99v3L4,12,7.99,8Z\" transform=\"translate(-4 -8)\"/>\r\n                        </svg>\r\n                        Back\r\n                    </div>\r\n                </div>`;\r\n    }\r\n\r\n    private toggleSubView(): void {\r\n        let slider = this.host.shadowRoot.getElementById('slider');\r\n        if (slider) {\r\n            let isOpen = slider.classList.contains('slide-in');\r\n            slider.setAttribute('class', isOpen ? 'slide-out' : 'slide-in');\r\n        }\r\n    }\r\n\r\n    private listItemOnClick(item: any) {\r\n        this.subViewState.selected = item;\r\n        this.host.requestUpdate();\r\n        this.toggleSubView();\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    // \r\n    //  Private Methods Section...  DISCONTINUED methods\r\n    //\r\n    //-------------------------------------------------------------------------\r\n    private renderTemplateFields(data: any, fields: Field[]): TemplateResult {\r\n        return html`${repeat(fields, (f: any) => f.Id, f => this.FieldWriter_TOBEDISCONTINUED[f.Type](data, f))}`;\r\n    }\r\n\r\n    private renderSectionOld(data: any, section: Section): TemplateResult {\r\n        return html`${this.renderTemplateFields(data, section.Fields)}`\r\n    }\r\n\r\n    private renderListWithSubViewSection(data: any, section: Section): TemplateResult {\r\n        if (!data.__viewState) {\r\n            data.__viewState = {};\r\n        }\r\n        this.subViewState = data.__viewState[section.Id] = data.__viewState[section.Id] || {};\r\n        let listName = section.Options.Source;\r\n        let list = data[listName];\r\n        let listItemIdentifier = section.Options.ListItemIdentifier;\r\n        if (list.length == 0) return html``;\r\n\r\n        let sortedlist = ListService.getSortedList(list, section);\r\n\r\n        return html`\r\n                    <div class=\"list-label\">${section.Options.Title} (${sortedlist.length})</div>\r\n                    <div id=\"container-list-items\" class=\"container-list-items\">\r\n                        <ul>\r\n                            ${repeat(sortedlist, i => i[listItemIdentifier], i => this.renderClickableListItem(i, section))}\r\n                        </ul>\r\n                    </div>\r\n                    ${this.renderSubDetailView(list, section)}`;\r\n    }\r\n\r\n    private getListItemLabel(data: any, section: Section): string {\r\n        let labelString = '';\r\n        section.Fields.forEach(f => {\r\n            labelString += this.FieldWriter_TOBEDISCONTINUED[f.Type](data, f)\r\n        });\r\n        return labelString;\r\n    }\r\n\r\n    public renderExternalData(data: any, section: any): TemplateResult {\r\n\r\n        let resolveFunction;\r\n        const promise = new Promise<void>((resolve, reject) => {\r\n            resolveFunction = resolve;\r\n        });\r\n\r\n        let callback = (callbackData) => {\r\n            try {\r\n                callbackData ? resolveFunction(html`<span class=\"popupexternaldata\" @click=${(event) => this.host.openPopUpExternalData(callbackData, section.Options.datasource, event)}>${this.renderTemplateFields(callbackData, section.Fields)}</span>`)\r\n                    : null;\r\n            } catch (error) {\r\n                console.log(error.message)\r\n            }\r\n        };\r\n        this.host.loadExternalData(data, section.Options.datasource, callback);\r\n\r\n        //Render plugin data\r\n        return html`${until(promise, html``)}`\r\n    }\r\n\r\n    private renderClickableListItem(item: any, section: Section): TemplateResult {\r\n\r\n        return html`\r\n            <li>\r\n                <div class='list-item' @click=${() => { this.listItemOnClick(item[section.Options.ListItemIdentifier]) }}>\r\n                    <span class='label'>${this.getListItemLabel(item, section)}</span>\r\n                    <span class='container-arrow'>\r\n                        <svg class='more arrow' height=\"9.471\" viewBox=\"0 0 5.848 9.471\">\r\n                            <path d=\"M8.59,14.358,12.2,10.735,8.59,7.113,9.7,6l4.735,4.735L9.7,15.47Z\" transform=\"translate(-8.59 -6)\" />\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n            </li>`;\r\n    }\r\n\r\n    private renderNonClickableListItem(item: any, fields: Field[]): TemplateResult {\r\n\r\n        return html`\r\n                    ${repeat(fields, f => f.Id, f => html`<div class=\"FieldType_${f.Type}\"> ${this.FieldWriter_TOBEDISCONTINUED[f.Type](item, f)}</div>`)}`;\r\n    }\r\n\r\n    private renderSubDetailView(list: any, section: Section): TemplateResult {\r\n\r\n        return html`${this.subViewState.selected ?\r\n            until(this.renderSliderDetailView(list.find(e => e[section.Options.ListItemIdentifier] == this.subViewState.selected), section.Options.TemplateId), html``) : html``}`;\r\n    }\r\n\r\n    private async renderSliderDetailView(data: any, templateId: string): Promise<TemplateResult> {\r\n\r\n        let template = await this.templateRetriever.getTemplateFromTemplateId(templateId);\r\n\r\n        let sections = template.Template.Content as unknown as Section[];\r\n\r\n        return html`\r\n                    <div class=\"slide-in\" id=\"slider\">\r\n                        <div class=\"detail-view ${this.host.viewClass}\">\r\n                            <div class=\"container-button\">${this.renderBackButton()}</div>\r\n                            <div> ${(this.renderData(data, sections))}</div>\r\n                        </div>\r\n                    </div>`;\r\n    }\r\n\r\n    private renderNonClickableList(data: any, section: Section): TemplateResult {\r\n        let listName = section.Options.Source;\r\n        let list = data[listName];\r\n        let listItemIdentifier = section.Options.ListItemIdentifier;\r\n        if (list.length == 0) return html``;\r\n\r\n        return html`\r\n                    <div>\r\n                            ${repeat(list, i => i[listItemIdentifier], i => this.renderNonClickableListItem(i, section.Fields))}\r\n                    </div>`;\r\n    }\r\n}","﻿import { customElement, html, LitElement, property, TemplateResult } from \"lit-element\";\r\nimport { TemplateRetriever } from \"../../genericdetailviewmanager/services/templateretriever\";\r\nimport { cancelclick } from \"../../shared/@cancelclick\";\r\nimport \"../../shared/extentions/lit-element.extensions\";\r\nimport { TemplateEngine } from \"../engine/templateengine\";\r\n\r\n@customElement(\"generic-detail-view\")\r\nclass GenericDetailView extends LitElement {\r\n    private templateEngine: TemplateEngine = null;\r\n\r\n    public constructor() {\r\n        super();\r\n        let templateRetriever = new TemplateRetriever();\r\n        this.templateEngine = new TemplateEngine(templateRetriever, this);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    // \r\n    //  Private properties Section...\r\n    //\r\n    //-------------------------------------------------------------------------\r\n    @property() data: any;\r\n    @property() template: any;\r\n    @property({ type: String }) viewClass: string;\r\n    @property({ type: String }) stylingPath: string;\r\n    @property() loadExternalData: any;\r\n    @property() templateId: any;\r\n    @property() openPopUpExternalData: any\r\n\r\n    @cancelclick() public firstUpdated(): void { }\r\n\r\n    public reRender(data, template): void {\r\n        this.data = data;\r\n        this.template = template;\r\n        this.requestUpdate();\r\n\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    // \r\n    //  Private methods Section...\r\n    //\r\n    //-------------------------------------------------------------------------\r\n\r\n    protected render(): TemplateResult {\r\n        if (!this.data) {\r\n            this.requestUpdate();\r\n            return null;\r\n        }\r\n        return html`\r\n        <link rel='stylesheet' href='/assets/css/genericdetailview.css'>\r\n        <link rel='stylesheet' href='${this.stylingPath}'>\r\n        <link rel=\"stylesheet\" href=\"/api/css/?tag=${this.tagName}&cid=${this.templateId}\">\r\n                <div class=\"panel\">\r\n                    <div class='detail-view ${this.viewClass}'\">\r\n                        <div class='content'>\r\n                            ${this.templateEngine.renderData(this.data, this.template)}\r\n                        </div>\r\n                </div>\r\n            </div> `;\r\n    }\r\n}"],"names":["render","litRender","timeoutPromise","DataFormatter"],"mappings":"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GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;IAChE,YAAY,SAAS,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACrD,YAAY,KAAK,EAAE,CAAC;IACpB,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,IAAI,gBAAgB,CAAC;IAC7B,QAAQ,IAAI,gBAAgB,CAAC;IAC7B;IACA,QAAQ,IAAI,OAAO,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1C,QAAQ,IAAI,OAAO,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA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"}